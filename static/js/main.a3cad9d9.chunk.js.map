{"version":3,"sources":["images/placeholder-image.jpg","images/fakebook-avatar.jpeg","images/background-server.jpg","images/friends.jpg","firebaseConfig.js","features/user/userSlice.js","features/currentUser/currentUserSlice.js","features/users/usersSlice.js","features/posts/postsSlice.js","features/incomingMessages/incomingMessagesSlice.js","features/outgoingMessages/outgoingMessagesSlice.js","features/images/imagesSlice.js","app/store.js","backend/backend.js","components/SignupModal.jsx","components/Login.jsx","components/RecentLogins.jsx","components/StorageImage.jsx","components/CircularImage.jsx","components/ProfileLink.jsx","components/Titlebar.jsx","components/ResponsiveImage.jsx","components/helper.js","components/Photos.jsx","components/FriendCard.jsx","components/Friends.jsx","components/UploadPhoto.jsx","components/PostModal.jsx","components/CreatePost.jsx","components/MiniPhotos.jsx","components/MiniFriends.jsx","components/FriendList.jsx","components/LikesModal.jsx","components/DisplayComment.jsx","components/StyledTextarea.jsx","components/Comments.jsx","components/DisplayPost.jsx","components/DisplayUserPost.jsx","components/Posts.jsx","components/NestedRoute.jsx","components/RemoveCoverPhotoDlg.jsx","components/SelectBgPhotoModal.jsx","components/UpdateProfilePicModal.jsx","components/Profile.jsx","components/PhotoViewer.jsx","components/PostView.jsx","components/LeftNavbar.jsx","components/VideoView.jsx","components/Message.jsx","components/DisplayConversation.jsx","components/Conversation.jsx","components/Contacts.jsx","components/HomePage.jsx","components/FriendsListPage.jsx","components/UserAccount.jsx","components/PasswordReminderModal.jsx","App.js","index.js"],"names":["module","exports","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","userSlice","createSlice","name","initialState","id","isSignedIn","isEmailVerified","error","isLoading","reducers","signIn","state","action","payload","displayName","signOut","errorOccured","loadingStarted","loadingFinished","actions","currentUserSlice","firstname","lastname","profilePictureURL","backgroundPictureURL","photos","posts","isOnline","currentUserUpdated","index","forEach","photo","push","post","usersSlice","usersUpdated","updatedState","user","postsSlice","postsUpdated","incomingMessagesSlice","incomingMessagesUpdated","message","outgoingMessagesSlice","outgoingMessagesUpdated","imagesSlice","imageAdded","map","image","storagePath","indexOf","imageUrlFound","url","configureStore","reducer","userReducer","currentUser","currentUserReducer","users","usersReducer","postsReducer","incomingMessages","incomingMessagesReducer","outgoingMessages","outgoingMessagesReducer","images","imagesReducer","FAKEBOOK_URL","firebase","initializeApp","appCheck","activate","storage","getImageURL","imagePath","a","imageRef","ref","getDownloadURL","auth","userID","userDocRef","firestore","usersCollection","collection","currentUserOnline","update","currentUserOffline","store","dispatch","subscribeMessages","typeOfMessages","typeOfUser","actionCreator","where","onSnapshot","snapshot","messages","dateString","messageData","data","timestamp","toDate","toISOString","createUserWithEmailAndPassword","email","password","result","updateProfile","get","querySnapshot","size","doc","uid","set","sendEmailVerification","console","log","EMAIL_VERIFICATION_ERROR","NO_ERROR","signInWithEmailAndPassword","emailVerified","refPosts","add","FieldValue","serverTimestamp","docRef","updateUserPosts","postID","newPosts","getState","unshift","updatePost","postRef","restPost","profile","refMessages","SignupModal","props","show","onHide","onExit","useState","setUser","handleChange","e","target","value","validated","setValidated","formIsValid","setFormIsValid","useEffect","Modal","onExited","Header","closeButton","Title","className","Body","Form","noValidate","onSubmit","preventDefault","currentTarget","checkValidity","createUserAccount","Row","Group","as","Col","Control","type","placeholder","onChange","required","Feedback","Button","variant","Login","onClickForgottenPswd","setState","newState","errorMsg","useSelector","useDispatch","stopPropagation","signInUser","isInvalid","onClick","RecentLogins","style","fontSize","StorageImage","alt","rest","placeholderImage","setUrl","changeStoragePath","words","split","length","join","shouldUpdate","cleanup","fakebookAvatar","backgroundServer","imageIndex","then","catch","_error","newUrl","src","CircularImage","radius","Math","floor","shift","width","height","objectFit","borderRadius","pointerEvents","position","top","left","border","ProfileLink","fullname","bold","minWidth","color","xs","TitleBar","closeFriendsListPage","refs","class","Navbar","bg","Brand","Link","to","Nav","Item","home","friends","watch","profilelink","DropdownButton","title","menuAlign","Dropdown","Divider","signUserOut","ResponsiveImage","useStoragePath","fileName","key","display","paddingBottom","handleClickLink","linkState","setLinkState","current","previous","backgroundColor","borderBottom","handleTextareaChange","input","text","addPhoto","isPhoto","photoURL","file","delPhoto","sideEffect","removePhotoFromPost","handleKeyPress","save","shiftKey","code","Photos","useRouteMatch","openFileInput","photosLinkRef","activeLink","setActiveLink","currentUserID","isCurrentUser","find","Card","textDecoration","float","sm","md","lg","FriendCard","userName","showOverlay","setShowOverlay","history","useHistory","handleClick","OverlayTrigger","placement","overlay","onMouseEnter","onMouseLeave","tabIndex","Friends","copyUsers","friendsLinkRef","UploadPhoto","setShow","fileInputRef","useRef","click","accept","event","files","child","put","addFileToStorage","PostModal","onClose","setText","isYoutubeBtnPressed","WELCOME_TEXT","INIT_POST","isYoutube","youtubeURL","likes","setPost","disabled","isBtnEnabled","setBtnEnabled","showUploadPhotoDlg","setShowUploadPhotoDlg","setPostBtnAsSideEffect","getPlaceholder","setPostBtnEnabled","rows","CloseButton","frameBorder","allow","allowFullScreen","newPost","URL_PATTERN","startsWith","patternLength","videoID","slice","aria-label","upload","CreatePost","PLACEHOLDER_FOR_CURRENT_USER","PLACEHOLDER_FOR_ANOTHER_USER","showPostModal","setShowPostModal","setYoutubeBtnPressed","newText","getText","MiniPhotos","photosLink","paddingLeft","paddingRight","paddingTop","MiniFriends","friendsLink","Subtitle","userProfileURL","FriendList","usersToUse","isModal","profileLink","LikesModal","usersWhoLike","DisplayComment","comment","StyledTextarea","onKeyPress","welcomeText","TEXTAREA_STYLE_INIT","outline","resize","overflow","background","padding","lineHeight","styleInitRef","setStyle","textarea","setTextarea","newStyle","scrollHeight","restyleTextarea","Comments","INIT_COMMENT","setComment","saveComment","comments","marginLeft","DisplayPost","showComments","setShowComments","isLiked","Text","lastIndexOf","newURL","getYouTubeURL","light","playing","controls","Footer","boxShadow","splice","DisplayUserPost","Posts","postsLinkRef","NestedRoute","itemId","useParams","RemoveCoverPhotoDlg","removeCoverPhoto","closeDlg","SelectBgPhotoModal","onPhotoClick","scrollable","UpdateProfilePicModal","onBtnClick","margin","Profile","linkRef","activeMainLink","setActiveMainLink","userId","showRemoveCoverPhotoDlg","setShowRemoveCoverPhotoDlg","showSelectPhoto","setShowSelectPhoto","showUpdateProfilePic","setShowUpdateProfilePic","nameOfURL","setNameOfURL","path","handleSelect","hideBgPhotoModal","hideProfilePicModal","handlePhotoClick","Number","eventKey","onSelect","updateDatabase","newPhoto","filenames","newPhotos","newProfile","PhotoViewer","n","activeIndex","setActiveIndex","location","useLocation","locArr","pathname","pop","Carousel","interval","indicators","selectedIndex","transform","maxWidth","PostView","LeftNavbar","VideoView","videos","filter","video","Message","sender","Date","toLocaleString","DisplayConversation","conversation","msg","Conversation","recipient","setConversation","incoming","outgoing","newConversation","sort","msgA","msgB","getConversation","Contacts","setRecipient","showPhotoDlg","setShowPhotoDlg","INIT_MESSAGE","isRead","setMessage","newMessage","handleClickCallback","useCallback","updateReadStatusOfMessages","removeSender","convRowRef","setScrollHeight","saveMessage","scrollTop","unsubscribeIncomingMsg","unsubscribeOutgoingMsg","senders","setSenders","unread","messagesToUpdate","updates","messageID","updateToBeRead","Promise","all","newSenders","sendersWithUnreadMsg","last","usr","maxHeight","window","innerHeight","aria-hidden","HomePage","isWatch","FriendsListPage","isNoUser","imgFriends","UserAccount","modifyProfileLink","unsubscribeCurrentUser","unsubscribeUsers","userData","unsubscribePosts","orderBy","postData","addEventListener","document","visibilityState","isFriendsListPage","Container","fluid","render","PasswordReminderModal","setEmail","Alert","Label","sendPasswordResetEmail","sendPasswordReminder","App","onAuthStateChanged","handleClose","handleShow","handleCloseCallback","trim","lastName","firstName","isModalSignup","setModalSignup","span","offset","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a3cad9d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder-image.d56c1d33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fakebook-avatar.c2424276.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background-server.070904ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/friends.2536911b.jpg\";","const firebaseConfig = {\n  apiKey: \"AIzaSyA6giH2VCl9pBrO86uGH3gcwbmeM-dYMPM\",\n  authDomain: \"fakebook-2df7b.firebaseapp.com\",\n  projectId: \"fakebook-2df7b\",\n  storageBucket: \"fakebook-2df7b.appspot.com\",\n  messagingSenderId: \"1030600439600\",\n  appId: \"1:1030600439600:web:98617c1d503260115cfaf5\",\n  measurementId: \"G-YN35E2SN2E\",\n};\n\nexport default firebaseConfig;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    id: \"\",\n    isSignedIn: false,\n    isEmailVerified: false,\n    error: \"\",\n    isLoading: true,\n  },\n  reducers: {\n    signIn: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.id = action.payload.id;\n      state.displayName = action.payload.displayName;\n      state.isEmailVerified = action.payload.isEmailVerified;\n      state.isSignedIn = true;\n    },\n    signOut: (state) => {\n      state.isSignedIn = false;\n    },\n    errorOccured: (state, action) => {\n      state.error = action.payload;\n    },\n    loadingStarted: (state) => {\n      state.isLoading = true;\n    },\n    loadingFinished: (state) => {\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const {\n  signIn,\n  signOut,\n  errorOccured,\n  loadingStarted,\n  loadingFinished,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState: {\n    firstname: \"\",\n    lastname: \"\",\n    profilePictureURL: \"fakebook-avatar.jpeg\",\n    backgroundPictureURL: \"background-server.jpg\",\n    photos: [],\n    posts: [],\n    isOnline: false,\n  },\n  reducers: {\n    currentUserUpdated: (state, action) => {\n      const {\n        firstname,\n        lastname,\n        profilePictureURL,\n        backgroundPictureURL,\n        photos,\n        posts,\n        isOnline,\n        index,\n      } = action.payload;\n      state.firstname = firstname;\n      state.lastname = lastname;\n      state.profilePictureURL = profilePictureURL;\n      state.backgroundPictureURL = backgroundPictureURL;\n      state.isOnline = isOnline;\n      if (index) state.index = index;\n      state.photos = [];\n      state.posts = [];\n      photos.forEach((photo) => state.photos.push(photo));\n      posts.forEach((post) => state.posts.push(post));\n    },\n  },\n});\n\nexport const { currentUserUpdated } = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    usersUpdated: (state, action) => {\n      const updatedState = [];\n      action.payload.forEach((user) => updatedState.push(user));\n      return updatedState;\n    },\n  },\n});\n\nexport const { usersUpdated } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState: [],\n  reducers: {\n    postsUpdated: (state, action) => {\n      const updatedState = [];\n      action.payload.forEach((post) => updatedState.push(post));\n      return updatedState;\n    },\n  },\n});\n\nexport const { postsUpdated } = postsSlice.actions;\n\nexport default postsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const incomingMessagesSlice = createSlice({\n  name: \"incomingMessages\",\n  initialState: [],\n  reducers: {\n    incomingMessagesUpdated: (state, action) => {\n      const updatedState = [];\n      action.payload.forEach((message) => updatedState.push(message));\n      return updatedState;\n    },\n  },\n});\n\nexport const { incomingMessagesUpdated } = incomingMessagesSlice.actions;\n\nexport default incomingMessagesSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const outgoingMessagesSlice = createSlice({\n  name: \"outgoingMessages\",\n  initialState: [],\n  reducers: {\n    outgoingMessagesUpdated: (state, action) => {\n      const updatedState = [];\n      action.payload.forEach((message) => updatedState.push(message));\n      return updatedState;\n    },\n  },\n});\n\nexport const { outgoingMessagesUpdated } = outgoingMessagesSlice.actions;\n\nexport default outgoingMessagesSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const imagesSlice = createSlice({\n  name: \"images\",\n  initialState: [],\n  reducers: {\n    imageAdded: (state, action) => {\n      const index = state\n        .map((image) => image.storagePath)\n        .indexOf(action.payload.storagePath);\n      if (index === -1) state.push(action.payload);\n    },\n    imageUrlFound: (state, action) => {\n      const index = state\n        .map((image) => image.storagePath)\n        .indexOf(action.payload.storagePath);\n      if (index > -1) state[index].url = action.payload.url;\n    },\n  },\n});\n\nexport const { imageAdded, imageUrlFound } = imagesSlice.actions;\n\nexport default imagesSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/user/userSlice\";\nimport currentUserReducer from \"../features/currentUser/currentUserSlice\";\nimport usersReducer from \"../features/users/usersSlice\";\nimport postsReducer from \"../features/posts/postsSlice\";\nimport incomingMessagesReducer from \"../features/incomingMessages/incomingMessagesSlice\";\nimport outgoingMessagesReducer from \"../features/outgoingMessages/outgoingMessagesSlice\";\nimport imagesReducer from \"../features/images/imagesSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    currentUser: currentUserReducer,\n    users: usersReducer,\n    posts: postsReducer,\n    incomingMessages: incomingMessagesReducer,\n    outgoingMessages: outgoingMessagesReducer,\n    images: imagesReducer,\n  },\n});\n","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/app-check\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport store from \"../app/store\";\nimport {\n  signIn,\n  signOut,\n  errorOccured,\n  loadingFinished,\n  loadingStarted,\n} from \"../features/user/userSlice\";\nimport { currentUserUpdated } from \"../features/currentUser/currentUserSlice\";\nimport { usersUpdated } from \"../features/users/usersSlice\";\nimport { postsUpdated } from \"../features/posts/postsSlice\";\nimport { incomingMessagesUpdated } from \"../features/incomingMessages/incomingMessagesSlice\";\nimport { outgoingMessagesUpdated } from \"../features/outgoingMessages/outgoingMessagesSlice\";\n\n// URL of my website.\nconst FAKEBOOK_URL = { url: \"https://alexerdei73.github.io/fakebook/\" };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst appCheck = firebase.appCheck();\n// Pass your reCAPTCHA v3 site key (public key) to activate(). Make sure this\n// key is the counterpart to the secret key you set in the Firebase console.\nappCheck.activate(\n  \"6LfCG9UhAAAAAL8vSI4Hbustx8baJEDMA0Sz1zD2\",\n\n  // Optional argument. If true, the SDK automatically refreshes App Check\n  // tokens as needed.\n  true\n);\n\nconst storage = firebase.storage();\n\nexport async function getImageURL(imagePath) {\n  const imageRef = storage.ref(imagePath);\n  const url = await imageRef.getDownloadURL();\n  return url;\n}\n\nconst auth = firebase.auth();\n\nexport function subscribeAuth() {\n  return auth.onAuthStateChanged((user) => {\n    if (user) {\n      const id = user.uid;\n      const isEmailVerified = user.emailVerified;\n      const displayName = user.displayName;\n      store.dispatch(signIn({ id, displayName, isEmailVerified }));\n    } else {\n      store.dispatch(signOut());\n    }\n    store.dispatch(loadingFinished());\n  });\n}\n\nconst firestore = firebase.firestore();\n\nconst usersCollection = firestore.collection(\"users\");\n\n//The following global variables get values, when the UserAccount component renders and runs\n//subscribeCurrentUser. After that we use them globally in the following functions.\nlet userID;\nlet userDocRef;\n\nexport function subscribeCurrentUser() {\n  userID = store.getState().user.id; //These are the\n  userDocRef = usersCollection.doc(userID); //global values\n  return userDocRef.onSnapshot((doc) => {\n    store.dispatch(currentUserUpdated(doc.data()));\n  });\n}\n\nexport function currentUserOnline() {\n  userDocRef.update({ isOnline: true });\n}\n\nexport function currentUserOffline() {\n  return userDocRef.update({ isOnline: false });\n}\n\nexport function subscribeUsers() {\n  return usersCollection.onSnapshot((snapshot) => {\n    const users = [];\n    snapshot.forEach((user) => {\n      const userData = user.data();\n      userData.userID = user.id;\n      users.push(userData);\n    });\n    store.dispatch(usersUpdated(users));\n  });\n}\n\nexport async function signUserOut() {\n  store.dispatch(loadingStarted());\n  await currentUserOffline();\n  await auth.signOut();\n  store.dispatch(loadingFinished());\n}\n\nexport function subscribePosts() {\n  const postsCollection = firestore.collection(\"posts\");\n  return postsCollection.orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\n    const posts = [];\n    snapshot.forEach((post) => {\n      const postData = post.data();\n      const timestamp = postData.timestamp;\n      let dateString = \"\";\n      if (timestamp) dateString = timestamp.toDate().toLocaleString();\n      postData.timestamp = dateString;\n      postData.postID = post.id;\n      posts.push(postData);\n    });\n    store.dispatch(postsUpdated(posts));\n  });\n}\n\nexport function subscribeMessages(typeOfMessages) {\n  let typeOfUser;\n  let actionCreator;\n  if (typeOfMessages === \"incoming\") {\n    typeOfUser = \"recipient\";\n    actionCreator = incomingMessagesUpdated;\n  } else {\n    typeOfUser = \"sender\";\n    actionCreator = outgoingMessagesUpdated;\n  }\n  const messagesCollection = firestore\n    .collection(\"messages\")\n    .where(typeOfUser, \"==\", userID);\n  return messagesCollection.onSnapshot((snapshot) => {\n    const messages = [];\n    snapshot.forEach((message) => {\n      const messageData = message.data();\n      const timestamp = message.data().timestamp;\n      let dateString;\n      if (timestamp) dateString = timestamp.toDate().toISOString();\n      else dateString = \"\";\n      messageData.timestamp = dateString;\n      messageData.id = message.id;\n      if (dateString !== \"\") messages.push(messageData);\n    });\n    store.dispatch(actionCreator(messages));\n  });\n}\n\nexport async function createUserAccount(user) {\n  try {\n    const result = await auth.createUserWithEmailAndPassword(\n      user.email,\n      user.password\n    );\n    // Update the nickname\n    await result.user.updateProfile({\n      displayName: `${user.firstname} ${user.lastname}`,\n    });\n    // get the index of the new user with the same username\n    const querySnapshot = await firestore\n      .collection(\"users\")\n      .where(\"firstname\", \"==\", user.firstname)\n      .where(\"lastname\", \"==\", user.lastname)\n      .get();\n    const index = querySnapshot.size;\n    // Create firestore document\n    await firestore.collection(\"users\").doc(result.user.uid).set({\n      firstname: user.firstname,\n      lastname: user.lastname,\n      profilePictureURL: \"fakebook-avatar.jpeg\",\n      backgroundPictureURL: \"background-server.jpg\",\n      photos: [],\n      posts: [],\n      isOnline: false,\n      index: index,\n    });\n    // Sign out the user\n    await firebase.auth().signOut();\n    // Send Email Verification and redirect to my website.\n    await result.user.sendEmailVerification(FAKEBOOK_URL);\n    console.log(\"Verification email has been sent.\");\n  } catch (error) {\n    // Update the error\n    store.dispatch(errorOccured(error.message));\n    console.log(error.message);\n  }\n}\n\nexport async function signInUser(user) {\n  const EMAIL_VERIFICATION_ERROR =\n    \"Please verify your email before to continue\";\n  const NO_ERROR = \"\";\n  try {\n    const result = await auth.signInWithEmailAndPassword(\n      user.email,\n      user.password\n    );\n    // email has been verified?\n    if (!result.user.emailVerified) {\n      auth.signOut();\n      store.dispatch(errorOccured(EMAIL_VERIFICATION_ERROR));\n    } else {\n      store.dispatch(errorOccured(NO_ERROR));\n    }\n  } catch (error) {\n    // Update the error\n    store.dispatch(errorOccured(error.message));\n  } finally {\n    store.dispatch(loadingFinished());\n  }\n}\n\nexport function sendPasswordReminder(email) {\n  return auth.sendPasswordResetEmail(email);\n}\n\nexport async function upload(post) {\n  const refPosts = firestore.collection(\"posts\");\n  const docRef = await refPosts.add({\n    ...post,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n  const postID = docRef.id;\n  updateUserPosts(postID);\n  return docRef;\n}\n\nfunction updateUserPosts(postID) {\n  const user = store.getState().currentUser;\n  let newPosts;\n  if (user.posts) newPosts = [...user.posts];\n  else newPosts = [];\n  newPosts.unshift(postID);\n  userDocRef.update({\n    posts: newPosts,\n  });\n}\n\nexport function updatePost(post, postID) {\n  const postRef = firestore.collection(\"posts\").doc(postID);\n  //We need to remove the timestamp, because it is stored in serializable format in the redux-store\n  //so we can't write it back to firestore\n  const { timestamp, ...restPost } = post;\n  postRef.update(restPost);\n}\n\nexport function addFileToStorage(file) {\n  const ref = storage.ref(userID).child(file.name);\n  return ref.put(file);\n}\n\nexport function updateProfile(profile) {\n  console.log(userDocRef);\n  console.log(profile);\n  return userDocRef.update(profile);\n}\n\nconst refMessages = firestore.collection(\"messages\");\n\nexport function uploadMessage(msg) {\n  return refMessages.add({\n    ...msg,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n}\n\nexport function updateToBeRead(messageID) {\n  return refMessages.doc(messageID).update({ isRead: true });\n}\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./Signup.css\";\nimport { createUserAccount } from \"../backend/backend\";\n\nconst SignupModal = (props) => {\n  const { show, onHide, onExit } = props;\n\n  const [user, setUser] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) =>\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n\n  const [validated, setValidated] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // Submit function (Create account)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === true) {\n      createUserAccount({\n        firstname: user.firstname,\n        lastname: user.lastname,\n        email: user.email,\n        password: user.password,\n      });\n      setFormIsValid(true);\n    }\n    setValidated(true);\n  };\n\n  useEffect(() => {\n    if (formIsValid) onHide();\n  }, [formIsValid, onHide]);\n\n  return (\n    <Modal show={show} onHide={onHide} onExited={onExit}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <strong className=\"fs-2\">Sign Up</strong>\n          <div className=\"title-footer\">It's quick and easy.</div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"First name\"\n                name=\"firstname\"\n                onChange={handleChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                First name required.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Surename\"\n                name=\"lastname\"\n                onChange={handleChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Last name required.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Email required in the right format.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"New password\"\n                name=\"password\"\n                onChange={handleChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Password required.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <p className=\"text-muted p-1 text-legal\">\n              Signing Up for fakebook you agree to share the uploaded details\n              with any other user. Please do not upload any sensitive data to\n              the app, which is built strictly for demonstration purposes.\n            </p>\n          </Form.Row>\n          <Row>\n            <Button type=\"submit\" variant=\"success\" className=\"w-50 mx-auto\">\n              <strong>Sign Up</strong>\n            </Button>\n          </Row>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SignupModal;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { errorOccured, loadingStarted } from \"../features/user/userSlice\";\nimport { signInUser } from \"../backend/backend\";\n\nconst Login = (props) => {\n  const { onClickForgottenPswd } = props;\n\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  // onChange function\n  const handleChange = (e) => {\n    const newState = { ...state };\n    newState[e.target.name] = e.target.value;\n    setState(newState);\n    dispatch(errorOccured(\"\"));\n  };\n\n  const errorMsg = useSelector((state) => state.user.error);\n  const dispatch = useDispatch();\n\n  // Submit function (Create account)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (state.email === \"\") {\n      dispatch(errorOccured(\"Email is required.\"));\n      return;\n    } else if (state.password === \"\") {\n      dispatch(errorOccured(\"Password is required.\"));\n      return;\n    }\n    dispatch(loadingStarted());\n    signInUser(state);\n  };\n\n  return (\n    <>\n      <Form noValidate onSubmit={handleSubmit} className=\"w-100\">\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          size=\"lg\"\n          className=\"mb-2 w-100\"\n          onChange={handleChange}\n          isInvalid={\n            errorMsg.indexOf(\"mail\") !== -1 ||\n            errorMsg.indexOf(\"identifier\") !== -1\n          }\n        />\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Password\"\n          name=\"password\"\n          size=\"lg\"\n          className=\"mb-2 w-100\"\n          onChange={handleChange}\n          isInvalid={errorMsg !== \"\"}\n        />\n        <Form.Control.Feedback type=\"invalid\">{errorMsg}</Form.Control.Feedback>\n        <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">\n          <b>Log In</b>\n        </Button>\n      </Form>\n      <Button\n        variant=\"link\"\n        type=\"link\"\n        className=\"w-100\"\n        id=\"link-button\"\n        onClick={onClickForgottenPswd}\n      >\n        Forgotten password?\n      </Button>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./RecentLogins.css\";\n\nconst RecentLogins = () => {\n  return (\n    <div className=\"recent-logins\">\n      <h1 className=\"text-primary w-100\">\n        <strong style={{ fontSize: \"3.5rem\" }}>fakebook</strong>\n      </h1>\n      <h3 className=\"w-100\">\n        <p>\n          Fakebook helps you connect and share with the people in your life.\n        </p>\n      </h3>\n    </div>\n  );\n};\n\nexport default RecentLogins;\n","import React, { useState } from \"react\";\nimport { getImageURL } from \"../backend/backend\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport placeholderImage from \"../images/placeholder-image.jpg\";\nimport fakebookAvatar from \"../images/fakebook-avatar.jpeg\";\nimport backgroundServer from \"../images/background-server.jpg\";\nimport { imageAdded, imageUrlFound } from \"../features/images/imagesSlice\";\nimport { useEffect } from \"react\";\n\nconst StorageImage = (props) => {\n  const { storagePath, alt, ...rest } = props;\n\n  const PLACEHOLDER_AVATAR_STORAGE_PATH = \"fakebook-avatar.jpeg\";\n  const PLACEHOLDER_BACKGROUND_STORAGE_PATH = \"background-server.jpg\";\n\n  //We use the images slice as a buffer. Fetching the actual url of the image\n  //in the storage takes relatively long time and uses Firebase. We render the same\n  //image in the app several times. Our goal to fetch the url only once for each image\n  //to save resources.\n  const images = useSelector((state) => state.images);\n  const dispatch = useDispatch();\n\n  const [url, setUrl] = useState(placeholderImage);\n\n  function changeStoragePath(storagePath) {\n    const words = storagePath.split(\".\");\n    words[words.length - 2] += \"_400x400\";\n    return words.join(\".\");\n  }\n\n  useEffect(() => {\n    let shouldUpdate = true;\n    const cleanup = () => (shouldUpdate = false);\n\n    //We filter out placeholder pictures\n    if (storagePath === PLACEHOLDER_AVATAR_STORAGE_PATH) {\n      setUrl(fakebookAvatar);\n      return cleanup;\n    }\n    if (storagePath === PLACEHOLDER_BACKGROUND_STORAGE_PATH) {\n      setUrl(backgroundServer);\n      return cleanup;\n    }\n\n    //We look for the url in images slice first\n    let imageIndex = images\n      .map((image) => image.storagePath)\n      .indexOf(storagePath);\n    if (imageIndex === -1) {\n      imageIndex = images\n        .map((image) => image.storagePath)\n        .indexOf(changeStoragePath(storagePath));\n      //If we are unable to find it anyway we add the image to the slice\n      if (imageIndex === -1) {\n        dispatch(\n          imageAdded({\n            storagePath,\n            url,\n          })\n        );\n      }\n      //We add the url for the image to the images slice when we have actually got it\n      //We also update the local state to show the right image\n      getImageURL(storagePath)\n        .then((url) => {\n          setUrl(url);\n          dispatch(\n            imageUrlFound({\n              storagePath,\n              url,\n            })\n          );\n        })\n        .catch((_error) => {\n          getImageURL(changeStoragePath(storagePath)).then((url) => {\n            setUrl(url);\n            dispatch(\n              imageUrlFound({\n                storagePath,\n                url,\n              })\n            );\n          });\n        });\n    } else {\n      //If we are able to find the url in the images slice we just use it instead of fetching\n      const newUrl = images[imageIndex].url;\n      //We only update the state if it contains different value and we should update because\n      //the component has not been unmounted by the time the promise resolves\n      if (newUrl !== url && shouldUpdate) setUrl(newUrl);\n    }\n    //We return a cleanup function which runs when the component unmounts. We set\n    //the shouldUpdate to false, so after this the state cannot be updated. If\n    //we don't do this React gives us error messages about state update on our\n    //unmounted component\n    return cleanup;\n  }, [images, storagePath, url, dispatch]);\n\n  return <img src={url} alt={alt} {...rest} />;\n};\n\nexport default StorageImage;\n","import React from \"react\";\nimport StorageImage from \"./StorageImage\";\n\nconst CircularImage = (props) => {\n  const { size, url, isOnline, ...rest } = props;\n\n  const radius = Math.floor(size / 6);\n\n  const shift = Math.floor(0.8536 * size - radius / 2);\n\n  return (\n    <>\n      <StorageImage\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          objectFit: \"cover\",\n          borderRadius: `${size / 2}px`,\n          pointerEvents: \"none\",\n          position: \"relative\",\n        }}\n        storagePath={url}\n        alt=\"\"\n        {...rest}\n      />\n      {isOnline && (\n        <div\n          className=\"bg-success\"\n          style={{\n            width: `${2 * radius}px`,\n            height: `${2 * radius}px`,\n            borderRadius: \"50%\",\n            position: \"absolute\",\n            top: `${shift}px`,\n            left: `${shift}px`,\n            border: \"2px solid white\",\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CircularImage;\n","import React from \"react\";\nimport CircularImage from \"./CircularImage\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst ProfileLink = (props) => {\n  const { size, fullname, bold, user } = props;\n\n  const { firstname, lastname, profilePictureURL, isOnline } = user;\n\n  let name;\n  if (fullname === \"true\") name = `${firstname} ${lastname}`;\n  else name = `${firstname}`;\n\n  return (\n    <Row\n      style={{\n        minWidth: \"150px\",\n        color: \"inherited\",\n      }}\n    >\n      <Col xs=\"auto\" className=\"px-2 ml-2\">\n        <CircularImage\n          size={size}\n          url={profilePictureURL}\n          isOnline={isOnline}\n        />\n      </Col>\n      <Col className=\"align-self-center p-0\" style={{ color: \"inherited\" }}>\n        {bold === \"true\" ? <b>{name}</b> : name}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileLink;\n","import React from \"react\";\nimport { Navbar, Nav, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { VscHome } from \"react-icons/vsc\";\nimport { FaFacebook } from \"react-icons/fa\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport { MdOndemandVideo } from \"react-icons/md\";\nimport { ImExit } from \"react-icons/im\";\nimport \"./Titlebar.css\";\nimport ProfileLink from \"./ProfileLink\";\nimport { signUserOut } from \"../backend/backend\";\nimport { useSelector } from \"react-redux\";\n\nconst TitleBar = (props) => {\n  //get the signed in user and closeFriendsListPage function\n  const { closeFriendsListPage, refs } = props;\n\n  const user = useSelector((state) => state.currentUser);\n\n  // Log out function\n  const handleClick = () => {\n    signUserOut();\n  };\n\n  return (\n    <div class=\"titlebar bg-light\">\n      <Navbar bg=\"light\" className=\"p-0 nav-container\">\n        <Navbar.Brand as={Link} to=\"/fakebook\">\n          <FaFacebook color=\"dodgerblue\" fontSize=\"2em\" className=\"mx-3\" />\n        </Navbar.Brand>\n        <div style={{ width: \"450px\" }} className=\"spaceing\" />\n        <Nav className=\"w-75 justify-content-start mr-5\">\n          <Nav.Item className=\"first\">\n            <Link to=\"/fakebook\" className=\"nav-link\" ref={refs.home}>\n              <VscHome\n                fontSize=\"2rem\"\n                className=\"mx-4\"\n                style={{ pointerEvents: \"none\" }}\n              />\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link\n              to=\"/fakebook/friends/list\"\n              className=\"nav-link\"\n              ref={refs.friends}\n            >\n              <FaUserFriends\n                fontSize=\"2rem\"\n                className=\"mx-4\"\n                style={{ pointerEvents: \"none\" }}\n              />\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link to=\"/fakebook/watch\" className=\"nav-link\" ref={refs.watch}>\n              <MdOndemandVideo\n                fontSize=\"2rem\"\n                className=\"mx-4\"\n                style={{ pointerEvents: \"none\" }}\n              />\n            </Link>\n          </Nav.Item>\n        </Nav>\n\n        <Nav className=\"w-25 justify-content-end align-self-center\">\n          <Nav.Item className=\"align-self-center first\">\n            <Link\n              to={props.profilelink}\n              className=\"nav-link profile\"\n              id=\"profile\"\n              onClick={(e) => {\n                closeFriendsListPage();\n              }}\n              ref={refs.profile}\n            >\n              <ProfileLink user={user} size=\"30\" fullname=\"false\" bold=\"true\" />\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"align-self-center\">\n            <DropdownButton\n              title=\"\"\n              className=\"mr-4 custom-drop-down-btn\"\n              menuAlign=\"right\"\n            >\n              <Dropdown.Item\n                as={Link}\n                to={props.profilelink}\n                onClick={() => closeFriendsListPage()}\n              >\n                <ProfileLink\n                  user={user}\n                  size=\"60\"\n                  fullname=\"true\"\n                  bold=\"true\"\n                />\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item\n                as={Link}\n                to=\"/fakebook/\"\n                onClick={handleClick}\n                className=\"p-0\"\n              >\n                <ImExit fontSize=\"1.5em\" className=\"mx-4\" />\n                <span>Log Out</span>\n                <div style={{ width: \"20em\" }}></div>\n              </Dropdown.Item>\n            </DropdownButton>\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from \"react\";\nimport StorageImage from \"./StorageImage\";\n\nconst ResponsiveImage = (props) => {\n  const {\n    width,\n    height,\n    index,\n    userID,\n    photo,\n    onClick,\n    className,\n    useStoragePath,\n  } = props;\n\n  let storagePath;\n  if (useStoragePath === \"true\") storagePath = photo;\n  else storagePath = `/${userID}/${photo.fileName}`;\n\n  return (\n    <div\n      key={index}\n      className={className}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        width: `${width}`,\n        height: \"0px\",\n        paddingBottom: `${height}`,\n      }}\n    >\n      <StorageImage\n        alt=\"\"\n        id={index}\n        storagePath={storagePath}\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"0px\",\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n        }}\n        onClick={onClick}\n      ></StorageImage>\n    </div>\n  );\n};\n\nexport default ResponsiveImage;\n","export function handleClickLink(e, linkState, setLinkState) {\n  const current = e.currentTarget;\n  const previous = linkState;\n  if (previous) {\n    if (previous.id === \"profile\") previous.style.backgroundColor = \"#e9ecef\";\n    previous.style.borderBottom = \"3px solid transparent\";\n    previous.style.color = \"\";\n  }\n  if (current) {\n    setLinkState(current);\n    current.style.color = \"dodgerblue\";\n    if (current.id === \"profile\") {\n      current.style.backgroundColor = \"lightblue\";\n      return;\n    }\n    current.style.borderBottom = \"3px solid dodgerblue\";\n  }\n}\n\nexport function handleTextareaChange(input) {\n  let value = input.e.target.value;\n  const newState = { ...input.state };\n  newState.text = value;\n  input.setState(newState);\n  return value;\n}\n\nexport function addPhoto(input) {\n  const newState = { ...input.state };\n  newState.isPhoto = true;\n  newState.photoURL = `${input.userID}/${input.file.name}`;\n  input.setState(newState);\n}\n\nexport function delPhoto(input) {\n  //We do not remove the photo from the storage, because in the case of multiple occurances, the removal\n  //of the photo causes error. If we want to take into account the storage efficiency, we have to store\n  //the number of occurences of each photo and only delete those from the storage, which only occure once.\n  //This would cause unnecessary extra logic in a demonstration app like this.\n  removePhotoFromPost(input.state, input.setState, input.sideEffect);\n}\n\nfunction removePhotoFromPost(state, setState, sideEffect) {\n  const newState = { ...state };\n  newState.isPhoto = false;\n  newState.photoURL = \"\";\n  setState(newState);\n  if (sideEffect) sideEffect();\n}\n\nexport function handleKeyPress(e, save) {\n  if (e.shiftKey) return;\n  const code = e.code;\n  if (code !== \"Enter\") return;\n  e.preventDefault();\n  save();\n}\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport ResponsiveImage from \"./ResponsiveImage\";\nimport { handleClickLink } from \"./helper\";\nimport { useSelector } from \"react-redux\";\n\nconst Photos = (props) => {\n  const { url } = useRouteMatch();\n  const { userID, openFileInput, photosLinkRef, activeLink, setActiveLink } =\n    props;\n\n  const users = useSelector((state) => state.users);\n  const currentUserID = useSelector((state) => state.user.id);\n\n  const isCurrentUser = userID === currentUserID;\n  const user = users.find((user) => user.userID === userID);\n  const photos = user.photos;\n\n  useEffect(() => {\n    handleClickLink(\n      { currentTarget: photosLinkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }, [activeLink, photosLinkRef, setActiveLink]);\n\n  return (\n    <Card variant=\"light\" className=\"w-100\">\n      <Card.Body>\n        <Card.Title>\n          <Link to={url} className=\"text-body\">\n            <b>Photos</b>\n          </Link>\n          {isCurrentUser && (\n            <Button\n              variant=\"link\"\n              style={{\n                textDecoration: \"none\",\n                float: \"right\",\n              }}\n              onClick={openFileInput}\n            >\n              <b>Add Photos</b>\n            </Button>\n          )}\n        </Card.Title>\n        <Row className=\"w-100\">\n          {photos.map((photo, index) => {\n            return (\n              <Col key={index} xs={6} sm={4} md={3} lg={2} className=\"p-1\">\n                <Link to={`/fakebook/photo/${userID}/${index}`}>\n                  <ResponsiveImage\n                    width=\"100%\"\n                    height=\"100%\"\n                    userID={userID}\n                    photo={photo}\n                    index={index}\n                  />\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Photos;\n","import React, { useState } from \"react\";\nimport { Col, OverlayTrigger } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport CircularImage from \"./CircularImage\";\nimport StorageImage from \"./StorageImage\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = (props) => {\n  const { user } = props;\n\n  const userName = `${user.firstname} ${user.lastname}`;\n\n  const [showOverlay, setShowOverlay] = useState(false);\n\n  const history = useHistory();\n\n  function handleClick() {\n    history.push(\n      user.index && user.index > 0\n        ? `/fakebook/${user.lastname}.${user.firstname}.${user.index}`\n        : `/fakebook/${user.lastname}.${user.firstname}`\n    );\n  }\n\n  return (\n    <Col xs={6} className=\"my-3\">\n      <OverlayTrigger\n        placement=\"auto\"\n        show={showOverlay}\n        overlay={\n          <div\n            className=\"popup-card\"\n            onMouseEnter={() => setShowOverlay(true)}\n            onMouseLeave={() => setShowOverlay(false)}\n            onClick={handleClick}\n          >\n            <div className=\"m-3\">\n              <CircularImage size=\"120\" url={user.profilePictureURL} />\n            </div>\n            <h4 className=\"name-tag\">\n              <b>{userName}</b>\n            </h4>\n          </div>\n        }\n      >\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"friend-btn\"\n          tabIndex=\"-1\"\n        >\n          <StorageImage\n            storagePath={user.profilePictureURL}\n            width=\"90px\"\n            height=\"90px\"\n            alt=\"\"\n            className=\"profile-picture\"\n            onMouseEnter={() => setShowOverlay(true)}\n            onMouseLeave={() => setShowOverlay(false)}\n          />\n        </button>\n      </OverlayTrigger>\n      <button type=\"button\" className=\"ml-3 friend-btn\" onClick={handleClick}>\n        <b>{userName}</b>\n      </button>\n    </Col>\n  );\n};\n\nexport default FriendCard;\n","import React, { useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport FriendCard from \"./FriendCard\";\nimport { handleClickLink } from \"./helper\";\nimport { useSelector } from \"react-redux\";\n\nconst Friends = (props) => {\n  const { url } = useRouteMatch();\n\n  const { friendsLinkRef, activeLink, setActiveLink } = props;\n\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    handleClickLink(\n      { currentTarget: friendsLinkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }, [activeLink, friendsLinkRef, setActiveLink]);\n\n  //copyUsers never undefined to avoid error\n  let copyUsers;\n  if (!users) copyUsers = [];\n  else copyUsers = users;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          <Link to={url} className=\"text-body\">\n            <b>Friends</b>\n          </Link>\n        </Card.Title>\n\n        <Row>\n          {copyUsers.map((user, index) => (\n            <FriendCard user={user} key={index} />\n          ))}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Friends;\n","import React, { useRef, useEffect } from \"react\";\nimport { addFileToStorage } from \"../backend/backend\";\n\nconst UploadPhoto = (props) => {\n  const { show, setShow, updatePost } = props;\n\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (!show) return;\n    fileInputRef.current.click();\n    setShow(false);\n  }, [show, setShow]);\n\n  function onChange(event) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    addFileToStorage(file).then(() => {\n      return updatePost(file);\n    });\n  }\n\n  return (\n    <input\n      type=\"file\"\n      accept=\"image/*\"\n      ref={fileInputRef}\n      style={{ display: \"none\" }}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default UploadPhoto;\n","import React, { useState } from \"react\";\nimport { Modal, Button, CloseButton } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport ProfileLink from \"./ProfileLink\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { AiFillYoutube } from \"react-icons/ai\";\nimport \"./PostModal.css\";\nimport { handleTextareaChange, addPhoto, delPhoto } from \"./helper\";\nimport { useSelector } from \"react-redux\";\nimport { upload } from \"../backend/backend\";\n\nconst PostModal = (props) => {\n  const { show, onClose, setText, isYoutubeBtnPressed, placeholder } = props;\n\n  const user = useSelector((state) => state.currentUser);\n  const userID = useSelector((state) => state.user.id);\n\n  const WELCOME_TEXT = `For adding YouTube video do the following:\n     1. copy link of the video from the addresse bar of your browser\n     2. press YouTube button again to upload the YouTube video to your post\n     3. add your text for the post\n     4. push the post button`;\n  const INIT_POST = {\n    userID: `${userID}`,\n    text: \"\",\n    isPhoto: false,\n    photoURL: \"\",\n    isYoutube: false,\n    youtubeURL: \"\",\n    likes: [],\n  };\n  const [post, setPost] = useState(INIT_POST);\n\n  function handleChange(e) {\n    const value = handleTextareaChange({\n      e: e,\n      state: post,\n      setState: setPost,\n    });\n    setPostBtnEnabled(value);\n  }\n\n  function setPostBtnEnabled(value) {\n    if (value === \"\") setBtnEnabled(false);\n    else setBtnEnabled(true);\n    setText(value);\n  }\n\n  const [isBtnEnabled, setBtnEnabled] = useState(false);\n  let variant, disabled;\n  if (isBtnEnabled) {\n    variant = \"primary\";\n    disabled = false;\n  } else {\n    variant = \"secondary\";\n    disabled = true;\n  }\n\n  const [showUploadPhotoDlg, setShowUploadPhotoDlg] = useState(false);\n\n  function addPhotoToPost(file) {\n    addPhoto({\n      state: post,\n      setState: setPost,\n      file: file,\n      userID: userID,\n    });\n    setBtnEnabled(true);\n  }\n\n  function deletePhoto() {\n    delPhoto({\n      state: post,\n      setState: setPost,\n      user: user,\n      userID: userID,\n      sideEffect: setPostBtnAsSideEffect,\n    });\n  }\n\n  function setPostBtnAsSideEffect() {\n    if (post.text === \"\" && !post.isYoutube) setBtnEnabled(false);\n  }\n\n  function uploadPost() {\n    upload(post).then(() => {\n      setPost(INIT_POST);\n      setText(\"\");\n      onClose();\n    });\n  }\n\n  function addYoutubeVideo() {\n    const url = post.text;\n    const URL_PATTERN = \"https://www.youtube.com/watch?v=\";\n    const MOBILE_URL_PATTERN = \"https://m.youtube.com/watch?v=\";\n    if (!url.startsWith(URL_PATTERN) && !url.startsWith(MOBILE_URL_PATTERN))\n      return;\n    let patternLength;\n    if (url.startsWith(URL_PATTERN)) patternLength = URL_PATTERN.length;\n    else patternLength = MOBILE_URL_PATTERN.length;\n    const videoID = url.slice(patternLength);\n    const youtubeURL = `https://www.youtube.com/embed/${videoID}`;\n    const newPost = { ...post };\n    newPost.isYoutube = true;\n    newPost.youtubeURL = youtubeURL;\n    newPost.text = \"\";\n    setPost(newPost);\n    setText(\"\");\n    setBtnEnabled(true);\n  }\n\n  function deleteYoutubeVideo() {\n    const newPost = { ...post };\n    newPost.isYoutube = false;\n    newPost.youtubeURL = \"\";\n    setPost(newPost);\n    if (post.text === \"\" && !post.isPhoto) setBtnEnabled(false);\n  }\n\n  function getPlaceholder() {\n    if (isYoutubeBtnPressed && !post.isYoutube) return WELCOME_TEXT;\n    else return placeholder;\n  }\n\n  function getRows() {\n    if (getPlaceholder() === WELCOME_TEXT && post.text === \"\") return 7;\n    else return 3;\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={onClose}>\n        <Modal.Header closeButton>\n          <div className=\"w-100 d-flex justify-content-center\">\n            <Modal.Title>\n              <b>Create Post</b>\n            </Modal.Title>\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          <ProfileLink user={user} size=\"45\" fullname=\"true\" bold=\"true\" />\n          <div className=\"mt-2 scrolling-container\">\n            <textarea\n              type=\"text\"\n              onChange={handleChange}\n              className=\"w-100 mt-2 textarea\"\n              placeholder={getPlaceholder()}\n              rows={getRows()}\n              value={post.text}\n            ></textarea>\n            {post.isPhoto && (\n              <div className=\"mb-2 img-container\">\n                <StorageImage\n                  alt=\"\"\n                  storagePath={`/${post.photoURL}`}\n                  className=\"w-100 img-to-post\"\n                />\n                <div className=\"close-btn-container\">\n                  <CloseButton onClick={deletePhoto} />\n                </div>\n              </div>\n            )}\n            {post.isYoutube && (\n              <div className=\"mb-2 video-container\">\n                <iframe\n                  src={post.youtubeURL}\n                  title=\"YouTube video player\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope\"\n                  allowFullScreen\n                ></iframe>\n                <div className=\"close-btn-container\">\n                  <CloseButton onClick={deleteYoutubeVideo} />\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"w-100 my-2 add-to-post\">\n            <b>Add to your post</b>\n            <Button\n              className=\"ml-2 add-photo-btn\"\n              variant=\"light\"\n              size=\"sm\"\n              onClick={addYoutubeVideo}\n              disabled={post.isPhoto || post.isYoutube}\n            >\n              <AiFillYoutube\n                size=\"26px\"\n                className=\"text-danger\"\n                aria-label=\"YouTube\"\n              />\n            </Button>\n            <Button\n              className=\"ml-2 add-photo-btn\"\n              variant=\"light\"\n              size=\"sm\"\n              onClick={() => setShowUploadPhotoDlg(true)}\n              disabled={post.isPhoto || post.isYoutube}\n            >\n              <HiOutlinePhotograph\n                size=\"26px\"\n                className=\"text-success\"\n                aria-label=\"photo\"\n              />\n            </Button>\n          </div>\n          <Button\n            variant={variant}\n            className=\"w-100 mt-3\"\n            disabled={disabled}\n            onClick={uploadPost}\n          >\n            <b>Post</b>\n          </Button>\n        </Modal.Body>\n      </Modal>\n      <UploadPhoto\n        show={showUploadPhotoDlg}\n        setShow={setShowUploadPhotoDlg}\n        updatePost={addPhotoToPost}\n      />\n    </>\n  );\n};\n\nexport default PostModal;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport CircularImage from \"./CircularImage\";\nimport PostModal from \"./PostModal\";\nimport \"./CreatePost.css\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { AiFillYoutube } from \"react-icons/ai\";\nimport { useSelector } from \"react-redux\";\n\nconst CreatePost = (props) => {\n  const { firstname, isCurrentUser, ...rest } = props;\n\n  const user = useSelector((state) => state.currentUser);\n\n  const PLACEHOLDER_FOR_CURRENT_USER = `What's on your mind ${user.firstname}?`;\n  const PLACEHOLDER_FOR_ANOTHER_USER = `Write something to ${firstname}`;\n\n  const [showPostModal, setShowPostModal] = useState(false);\n  const [isYoutubeBtnPressed, setYoutubeBtnPressed] = useState(false);\n\n  const [text, setText] = useState(\"\");\n\n  const handleClose = () => {\n    setShowPostModal(false);\n    setYoutubeBtnPressed(false);\n  };\n\n  const handleClick = () => setShowPostModal(true);\n\n  const handleYoutubeBtnClick = () => {\n    setYoutubeBtnPressed(true);\n    setShowPostModal(true);\n  };\n\n  function getPlaceholder() {\n    if (isCurrentUser) return PLACEHOLDER_FOR_CURRENT_USER;\n    else return PLACEHOLDER_FOR_ANOTHER_USER;\n  }\n\n  function getText() {\n    const MAX_LENGTH = 55;\n    const length = text.length;\n    if (length === 0) return getPlaceholder();\n    else {\n      let newText = text.slice(0, MAX_LENGTH);\n      if (length > MAX_LENGTH) newText += \"...\";\n      return newText;\n    }\n  }\n\n  return (\n    <>\n      <Card className=\"create-post-card\" {...rest}>\n        <Card.Body>\n          <Card.Title>\n            <CircularImage size=\"40\" url={user.profilePictureURL} />\n            <button\n              type=\"button\"\n              className=\"p-2 w-75 text-dark text-btn\"\n              onClick={handleClick}\n            >\n              {getText()}\n            </button>\n          </Card.Title>\n          <hr></hr>\n          <Button\n            variant=\"light\"\n            className=\"add-btn\"\n            size=\"sm\"\n            onClick={handleYoutubeBtnClick}\n          >\n            <AiFillYoutube size=\"28px\" className=\"text-danger\" />\n            YouTube\n          </Button>\n          <Button\n            variant=\"light\"\n            className=\"add-btn\"\n            size=\"sm\"\n            onClick={handleClick}\n          >\n            <HiOutlinePhotograph size=\"28px\" className=\"text-success\" />\n            Photo\n          </Button>\n        </Card.Body>\n      </Card>\n\n      <PostModal\n        show={showPostModal}\n        onClose={handleClose}\n        setText={setText}\n        isYoutubeBtnPressed={isYoutubeBtnPressed}\n        placeholder={getPlaceholder()}\n      />\n    </>\n  );\n};\n\nexport default CreatePost;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ResponsiveImage from \"./ResponsiveImage\";\nimport { handleClickLink } from \"./helper\";\n\nconst MiniPhotos = (props) => {\n  const { user, userID, photosLinkRef, activeLink, setActiveLink, ...rest } =\n    props;\n\n  const photos = user.photos;\n\n  const NUMBER_OF_PHOTOS = 9;\n\n  const photosLink = `/fakebook/${user.lastname}.${user.firstname}/Photos`;\n\n  function handleClick() {\n    handleClickLink(\n      { currentTarget: photosLinkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }\n\n  return (\n    <Card {...rest}>\n      <Card.Body>\n        <Card.Title>\n          <Link to={photosLink} className=\"text-body\" onClick={handleClick}>\n            <b>Photos</b>\n          </Link>\n        </Card.Title>\n        <Row>\n          {photos.map((photo, index) => {\n            return (\n              //we only render maximum 9 photos\n              index < NUMBER_OF_PHOTOS && (\n                <Col\n                  key={index}\n                  xs={4}\n                  className=\"m-0\"\n                  style={{\n                    paddingLeft: \"3px\",\n                    paddingRight: \"3px\",\n                    paddingTop: \"0\",\n                    paddingBottom: \"0\",\n                  }}\n                >\n                  <Link\n                    to={`/fakebook/photo/${userID}/${index}`}\n                    className=\"text-body\"\n                    onClick={handleClick}\n                    tabIndex=\"-1\"\n                  >\n                    <ResponsiveImage\n                      photo={photo}\n                      userID={userID}\n                      index={index}\n                      width=\"100%\"\n                      height=\"100%\"\n                    />\n                  </Link>\n                </Col>\n              )\n            );\n          })}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MiniPhotos;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { handleClickLink } from \"./helper\";\nimport ResponsiveImage from \"./ResponsiveImage\";\nimport { useSelector } from \"react-redux\";\n\nconst MiniFriends = (props) => {\n  const { user, friendsLinkRef, activeLink, setActiveLink, ...rest } = props;\n\n  const NUMBER_OF_FRIENDS = 9;\n\n  const friendsLink =\n    user.index && user.index > 0\n      ? `/fakebook/${user.lastname}.${user.firstname}.${user.index}/Friends`\n      : `/fakebook/${user.lastname}.${user.firstname}/Friends`;\n\n  function handleClick() {\n    handleClickLink(\n      { currentTarget: friendsLinkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }\n\n  const users = useSelector((state) => state.users);\n\n  return (\n    <Card {...rest}>\n      <Card.Body>\n        <Card.Title>\n          <Link to={friendsLink} className=\"text-body\" onClick={handleClick}>\n            <b>Friends</b>\n          </Link>\n        </Card.Title>\n        <Card.Subtitle className=\"text-muted\">\n          {users.length} friends\n        </Card.Subtitle>\n        <Row>\n          {users.map((user, index) => {\n            const userProfileURL =\n              user.index && user.index > 0\n                ? `/fakebook/${user.lastname}.${user.firstname}.${user.index}`\n                : `/fakebook/${user.lastname}.${user.firstname}`;\n            const userName = `${user.firstname} ${user.lastname}`;\n            return (\n              //we render maximum 9 friends\n              index < NUMBER_OF_FRIENDS && (\n                <Col\n                  key={index}\n                  xs={4}\n                  className=\"m-0\"\n                  style={{\n                    paddingLeft: \"3px\",\n                    paddingRight: \"3px\",\n                    paddingTop: \"0\",\n                    paddingBottom: \"3px\",\n                  }}\n                >\n                  <ResponsiveImage\n                    photo={user.profilePictureURL}\n                    width=\"100%\"\n                    height=\"100%\"\n                    useStoragePath=\"true\"\n                  />\n                  <Link\n                    to={userProfileURL}\n                    className=\"text-body\"\n                    onClick={handleClick}\n                  >\n                    <div className=\"w-100\" style={{ height: \"2.5em\" }}>\n                      <p style={{ fontSize: \"0.9em\" }}>\n                        <b>{userName}</b>\n                      </p>\n                    </div>\n                  </Link>\n                </Col>\n              )\n            );\n          })}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MiniFriends;\n","import React from \"react\";\nimport ProfileLink from \"./ProfileLink\";\nimport { Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst FriendList = (props) => {\n  const { users, variant } = props;\n\n  const allUsers = useSelector((state) => state.users);\n\n  //Component is used with users prop in LikesModal, but without users prop in FriendsListPage\n  let usersToUse = allUsers;\n  if (users) usersToUse = users;\n\n  const isModal = variant === \"modal\";\n\n  return (\n    <Col xs=\"auto\" className=\"overflow-auto mh-100\">\n      <div id=\"col-1\" className=\"m-2\">\n        {usersToUse.map((user, index) => {\n          let profileLink = `/fakebook/${user.lastname}.${user.firstname}`;\n          if (user.index && user.index > 0)\n            profileLink = profileLink + `.${user.index}`;\n          return (\n            <Link\n              key={index}\n              to={profileLink}\n              className={isModal ? \"p-1 text-dark\" : \"nav-link text-dark\"}\n            >\n              <ProfileLink\n                user={user}\n                fullname=\"true\"\n                size={isModal ? \"40\" : \"60\"}\n                bold=\"true\"\n                className=\"pb-1\"\n              />\n            </Link>\n          );\n        })}\n      </div>\n    </Col>\n  );\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport FriendList from \"./FriendList\";\nimport { useSelector } from \"react-redux\";\n\nconst LikesModal = (props) => {\n  const { show, onHide, likes } = props;\n\n  const users = useSelector((state) => state.users);\n\n  const usersWhoLike = likes.map((userID) =>\n    users.find((user) => user.userID === userID)\n  );\n\n  return (\n    <Modal show={show} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title className=\"text-primary\">All</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overflow-hidden\">\n        <FriendList users={usersWhoLike} variant=\"modal\" />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default LikesModal;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport CircularImage from \"./CircularImage\";\nimport { useSelector } from \"react-redux\";\n\nconst DisplayComment = (props) => {\n  const { comment, ...rest } = props;\n\n  const userID = comment.userID;\n\n  const users = useSelector((state) => state.users);\n\n  const user = users.find((user) => user.userID === userID);\n\n  return (\n    <Row {...rest}>\n      <Col xs={1}>\n        <CircularImage size=\"26\" url={user.profilePictureURL} />\n      </Col>\n      <Col xs={11}>\n        <p>\n          <b>{`${user.firstname} ${user.lastname} `}</b>\n          {comment.text}\n        </p>\n        {comment.isPhoto && (\n          <StorageImage\n            alt=\"\"\n            storagePath={comment.photoURL}\n            style={{\n              width: \"30%\",\n            }}\n          />\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default DisplayComment;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst StyledTextarea = (props) => {\n  const { onChange, onKeyPress, value, welcomeText, ...rest } = props;\n\n  const TEXTAREA_STYLE_INIT = {\n    outline: \"none\",\n    border: \"none\",\n    resize: \"none\",\n    overflow: \"hidden\",\n    background: \"#e9ecef\",\n    padding: \"0\",\n    lineHeight: \"0.8em\",\n  };\n  const styleInitRef = useRef(TEXTAREA_STYLE_INIT);\n  const [style, setStyle] = useState(TEXTAREA_STYLE_INIT);\n  const [textarea, setTextarea] = useState(null); //We save the textarea in the state, so the effect hook can use it\n\n  //When content changes we first change the height to auto,\n  //which changes back the scrollHeight property of the textarea\n  //to a low value and the component rerenders\n  function restyleTextarea(textarea) {\n    const newStyle = { ...style };\n    newStyle.height = \"auto\";\n    setStyle(newStyle);\n  }\n\n  //When the component has rerendered and the height is auto\n  //we set the height to the scrollHeight property of textarea\n  //This way when the height of the content decreses the textarea\n  //can follow it down too. Without this trick the textarea can\n  //grow but unable to shrink back\n  useEffect(() => {\n    if (style.height !== \"auto\") return;\n    if (!textarea) return;\n    const newStyle = { ...style };\n    newStyle.height = textarea.scrollHeight + \"px\";\n    setStyle(newStyle);\n  }, [style, textarea]);\n\n  //This restyles the text area, when we send the message, so the\n  //value goes back to \"\" without executing the onChange handler\n  useEffect(() => {\n    if (value === \"\" && textarea) setStyle(styleInitRef.current);\n  }, [value, textarea, styleInitRef]);\n\n  return (\n    <textarea\n      type=\"text\"\n      onChange={(e) => {\n        onChange(e);\n        const textarea = e.target;\n        setTextarea(textarea);\n        restyleTextarea(textarea);\n      }}\n      onKeyPress={onKeyPress}\n      placeholder={welcomeText}\n      rows=\"1\"\n      style={style}\n      value={value}\n      {...rest}\n    ></textarea>\n  );\n};\n\nexport default StyledTextarea;\n","import React, { useState } from \"react\";\nimport { Col, Row, CloseButton, Button } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport CircularImage from \"./CircularImage\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport DisplayComment from \"./DisplayComment\";\nimport StyledTextarea from \"./StyledTextarea\";\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { MdSend } from \"react-icons/md\";\nimport {\n  addPhoto,\n  handleTextareaChange,\n  delPhoto,\n  handleKeyPress,\n} from \"./helper\";\nimport \"./Comments.css\";\nimport { useSelector } from \"react-redux\";\nimport { updatePost } from \"../backend/backend\";\n\nconst Comments = (props) => {\n  const { post } = props;\n\n  const user = useSelector((state) => state.currentUser);\n  const userID = useSelector((state) => state.user.id);\n\n  const WELCOME_TEXT = \"Write a comment ...\";\n  const INIT_COMMENT = {\n    userID: userID,\n    text: \"\",\n    isPhoto: false,\n    photoURL: \"\",\n  };\n  const [comment, setComment] = useState(INIT_COMMENT);\n\n  const [show, setShow] = useState(false);\n\n  function handleChange(e) {\n    handleTextareaChange({\n      e: e,\n      state: comment,\n      setState: setComment,\n    });\n  }\n\n  function addPhotoToComment(file) {\n    addPhoto({\n      state: comment,\n      setState: setComment,\n      file: file,\n      userID: userID,\n    });\n  }\n\n  function deletePhoto() {\n    delPhoto({\n      state: comment,\n      setState: setComment,\n      user: user,\n      userID: userID,\n    });\n  }\n\n  function saveComment() {\n    if (comment.text === \"\" && !comment.isPhoto) return;\n    const newPost = {\n      ...post,\n      comments: [],\n    };\n    const postID = post.postID;\n    if (post.comments) newPost.comments = [...post.comments];\n    newPost.comments.push(comment);\n    updatePost(newPost, postID);\n    setComment(INIT_COMMENT);\n  }\n\n  return (\n    <Col>\n      <hr />\n      {post.comments &&\n        post.comments.map((comment, index) => (\n          <DisplayComment key={index} comment={comment} className=\"mb-2\" />\n        ))}\n      <Row>\n        <Col xs={1}>\n          <CircularImage size=\"36\" url={user.profilePictureURL} />\n        </Col>\n        <Col xs={11}>\n          <Row\n            style={{\n              background: \"#e9ecef\",\n              borderRadius: \"18px\",\n              marginLeft: \"5px\",\n            }}>\n            <Col xs={9} className=\"align-self-center\">\n              <StyledTextarea\n                onChange={handleChange}\n                onKeyPress={(e) => handleKeyPress(e, saveComment)}\n                welcomeText={WELCOME_TEXT}\n                value={comment.text}\n                className=\"w-100 mt-2\"\n              />\n            </Col>\n            <Col xs={3}>\n              <Row className=\"justify-content-end align-items-baseline\">\n                <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  className=\"comment-btn\"\n                  onClick={() => setShow(true)}\n                  disabled={comment.isPhoto}>\n                  <MdPhotoCamera\n                    size=\"18px\"\n                    className=\"text-muted\"\n                    aria-label=\"photo\"\n                  />\n                </Button>\n                <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  className=\"comment-btn\"\n                  onClick={() => saveComment()}>\n                  <MdSend\n                    size=\"18px\"\n                    className=\"text-primary\"\n                    aria-label=\"send\"\n                  />\n                </Button>\n              </Row>\n            </Col>\n          </Row>\n          {comment.isPhoto && (\n            <div className=\"comment-img-container\">\n              <StorageImage\n                alt=\"\"\n                storagePath={`/${comment.photoURL}`}\n                className=\"img-to-comment\"\n              />\n              <div id=\"close-btn-container\">\n                <CloseButton onClick={deletePhoto} />\n              </div>\n            </div>\n          )}\n        </Col>\n      </Row>\n\n      <UploadPhoto\n        show={show}\n        setShow={setShow}\n        updatePost={addPhotoToComment}\n      />\n    </Col>\n  );\n};\n\nexport default Comments;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport ProfileLink from \"./ProfileLink\";\nimport LikesModal from \"./LikesModal\";\nimport Comments from \"./Comments\";\nimport { AiOutlineLike, AiFillLike } from \"react-icons/ai\";\nimport { GoComment } from \"react-icons/go\";\nimport { useSelector } from \"react-redux\";\nimport { updatePost } from \"../backend/backend\";\nimport ReactPlayer from \"react-player/lazy\";\n\nconst DisplayPost = (props) => {\n  const { post, ...rest } = props;\n\n  const userID = useSelector((state) => state.user.id);\n  const users = useSelector((state) => state.users);\n\n  const [show, setShow] = useState(false);\n\n  const [showComments, setShowComments] = useState(false);\n\n  function handleHide() {\n    setShow(false);\n  }\n\n  //We avoid error if post is undefind\n  if (!post) return <></>;\n\n  const postID = post.postID;\n\n  const user = users.find((user) => user.userID === post.userID);\n\n  //We avoid error if user is undefined\n  if (!user) return <></>;\n\n  function index() {\n    return post.likes.indexOf(userID);\n  }\n\n  function isLiked() {\n    return !(index() === -1);\n  }\n\n  function handleClick() {\n    const likes = [...post.likes];\n    const index = likes.indexOf(userID);\n    if (index === -1) likes.push(userID);\n    else likes.splice(index, 1);\n    updatePost({ likes: likes }, postID);\n  }\n\n  function handleCommentClick() {\n    setShowComments(true);\n  }\n\n  function getYouTubeURL(url) {\n    const index = url.lastIndexOf(\"/\");\n    const videoID = url.slice(index + 1);\n    const newURL = `https://www.youtube.com/watch?v=${videoID}`;\n    console.log(newURL);\n    return newURL;\n  }\n\n  return (\n    <Card {...rest}>\n      <Card.Header>\n        <ProfileLink user={user} size=\"40\" fullname=\"true\" bold=\"true\" />\n        <span\n          style={{\n            fontSize: \"12px\",\n          }}\n        >\n          {post.timestamp}\n        </span>\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>{post.text}</Card.Text>\n        {post.isPhoto && (\n          <StorageImage alt=\"\" storagePath={post.photoURL} className=\"w-100\" />\n        )}\n        {post.isYoutube && (\n          <div className=\"video-container\">\n            <ReactPlayer\n              className=\"react-player\"\n              url={getYouTubeURL(post.youtubeURL)}\n              light\n              width=\"100%\"\n              height=\"100%\"\n              playing\n              controls\n            />\n          </div>\n        )}\n      </Card.Body>\n      <Card.Footer>\n        <Button\n          variant=\"link\"\n          className=\"text-muted\"\n          onClick={() => {\n            if (post.likes.length > 0) setShow(true);\n          }}\n          style={{ boxShadow: \"none\" }}\n        >\n          <AiFillLike\n            className=\"bg-primary text-light mr-2\"\n            style={{ borderRadius: \"50%\" }}\n            aria-label=\"likes\"\n          />\n          {post.likes.length}\n        </Button>\n        <Button\n          variant=\"link\"\n          className=\"text-muted float-right\"\n          onClick={() => setShowComments(!showComments)}\n          style={{ boxShadow: \"none\" }}\n        >\n          comments({post.comments ? post.comments.length : 0})\n        </Button>\n        <hr />\n        <Button\n          variant=\"light\"\n          className={`${isLiked() ? \"text-primary\" : \"text-muted\"} w-50`}\n          onClick={handleClick}\n        >\n          {isLiked() ? (\n            <AiFillLike size=\"22px\" />\n          ) : (\n            <AiOutlineLike size=\"22px\" />\n          )}\n          <b> Like</b>\n        </Button>\n        <Button\n          variant=\"light\"\n          className=\"text-muted w-50\"\n          onClick={handleCommentClick}\n        >\n          <GoComment size=\"22px\" />\n          <b> Comment</b>\n        </Button>\n        {showComments && <Comments post={post} />}\n      </Card.Footer>\n\n      <LikesModal show={show} onHide={handleHide} likes={post.likes} />\n    </Card>\n  );\n};\n\nexport default DisplayPost;\n","import React from \"react\";\nimport DisplayPost from \"./DisplayPost\";\nimport { useSelector } from \"react-redux\";\n\nconst DisplayUserPost = (props) => {\n  const { postID } = props;\n\n  const posts = useSelector((state) => state.posts);\n  const post = posts.find((post) => post.postID === postID);\n\n  return <DisplayPost post={post} />;\n};\n\nexport default DisplayUserPost;\n","import React, { useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport CreatePost from \"./CreatePost\";\nimport MiniPhotos from \"./MiniPhotos\";\nimport MiniFriends from \"./MiniFriends\";\nimport DisplayUserPost from \"./DisplayUserPost\";\nimport { handleClickLink } from \"./helper\";\nimport { useSelector } from \"react-redux\";\n\nconst Posts = (props) => {\n  const {\n    userID,\n    postsLinkRef,\n    friendsLinkRef,\n    photosLinkRef,\n    activeLink,\n    setActiveLink,\n  } = props;\n\n  const users = useSelector((state) => state.users);\n  const currentUserID = useSelector((state) => state.user.id);\n\n  const isCurrentUser = userID === currentUserID;\n\n  const user = users.find((user) => user.userID === userID);\n\n  useEffect(() => {\n    handleClickLink(\n      { currentTarget: postsLinkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }, [activeLink, postsLinkRef, setActiveLink]);\n\n  return (\n    <Row className=\"w-100\" style={{ height: \"1000px\" }}>\n      <Col sm={5} className=\"mh-100 overflow-hidden\">\n        <MiniPhotos\n          user={user}\n          userID={userID}\n          photosLinkRef={photosLinkRef}\n          activeLink={activeLink}\n          setActiveLink={setActiveLink}\n          className=\"my-2\"\n        />\n        <MiniFriends\n          user={user}\n          friendsLinkRef={friendsLinkRef}\n          activeLink={activeLink}\n          setActiveLink={setActiveLink}\n          className=\"my-2\"\n        />\n      </Col>\n      <Col sm={7} className=\"mh-100 overflow-auto hide-scrollbar bg-200\">\n        <CreatePost\n          firstname={user.firstname}\n          isCurrentUser={isCurrentUser}\n          className=\"mt-2\"\n        />\n        {user.posts.map((postID, index) => {\n          return (\n            <DisplayUserPost\n              key={index}\n              postID={postID}\n              className=\"mx-auto my-2\"\n            />\n          );\n        })}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Photos from \"./Photos\";\nimport Friends from \"./Friends\";\nimport Posts from \"./Posts\";\n\nconst NestedRoute = (props) => {\n  const { itemId } = useParams();\n\n  const {\n    userID,\n    openFileInput,\n    photosLinkRef,\n    friendsLinkRef,\n    postsLinkRef,\n    activeLink,\n    setActiveLink,\n  } = props;\n\n  if (itemId === \"Photos\")\n    return (\n      <Photos\n        userID={userID}\n        openFileInput={openFileInput}\n        //the rendering of the component changes the activeLink\n        photosLinkRef={photosLinkRef}\n        activeLink={activeLink}\n        setActiveLink={setActiveLink}\n      />\n    );\n  if (itemId === \"Friends\")\n    return (\n      <Friends\n        //the rendering of the component changes the activeLink\n        friendsLinkRef={friendsLinkRef}\n        activeLink={activeLink}\n        setActiveLink={setActiveLink}\n      />\n    );\n  else\n    return (\n      <Posts\n        userID={userID}\n        //the rendering of the component changes the activeLink\n        photosLinkRef={photosLinkRef}\n        friendsLinkRef={friendsLinkRef}\n        postsLinkRef={postsLinkRef}\n        activeLink={activeLink}\n        setActiveLink={setActiveLink}\n      ></Posts>\n    );\n};\n\nexport default NestedRoute;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst RemoveCoverPhotoDlg = (props) => {\n  const { show, removeCoverPhoto, closeDlg } = props;\n\n  return (\n    <Modal show={show} onHide={closeDlg}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <strong className=\"fs-2\">Remove Cover Photo</strong>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>Do you really want to remove the cover photo?</div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"link\"\n          style={{ textDecoration: \"none\" }}\n          onClick={closeDlg}\n        >\n          <b>Cancel</b>\n        </Button>\n        <Button variant=\"primary\" onClick={removeCoverPhoto}>\n          <b>Submit</b>\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default RemoveCoverPhotoDlg;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\n\nconst SelectBgPhotoModal = (props) => {\n  const { show, onHide, onPhotoClick, userID, photos } = props;\n\n  return (\n    <Modal show={show} onHide={onHide} scrollable>\n      <Modal.Header closeButton>\n        <Modal.Title style={{ marginLeft: \"35%\" }}>\n          <strong>Select Photo</strong>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {photos.map((photo, index) => {\n          return (\n            <StorageImage\n              className=\"m-1\"\n              width=\"31%\"\n              height=\"90px\"\n              alt=\"\"\n              key={index}\n              id={index}\n              storagePath={`/${userID}/${photo.fileName}`}\n              style={{\n                objectFit: \"cover\",\n              }}\n              onClick={onPhotoClick}\n            ></StorageImage>\n          );\n        })}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SelectBgPhotoModal;\n","import React from \"react\";\nimport { Modal, Button, Row } from \"react-bootstrap\";\nimport ResponsiveImage from \"./ResponsiveImage\";\n\nconst UpdateProfilePicModal = (props) => {\n  const { show, onHide, onBtnClick, onPhotoClick, userID, photos } = props;\n\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\" scrollable>\n      <Modal.Header closeButton>\n        <Modal.Title style={{ margin: \"auto\" }}>\n          <strong>Update Profile Picture</strong>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Button\n          size=\"sm\"\n          variant=\"outline-primary\"\n          className=\"w-50 m-2 mb-3\"\n          onClick={onBtnClick}\n        >\n          <b>+ Upload Photo</b>\n        </Button>\n        <br />\n        <b>Suggested Photos</b>\n        <Row className=\"m-1\">\n          {photos.map((photo, index) => {\n            return (\n              <ResponsiveImage\n                key={index}\n                width=\"15%\"\n                height=\"15%\"\n                userID={userID}\n                photo={photo}\n                index={index}\n                onClick={onPhotoClick}\n                className=\"m-1\"\n              />\n            );\n          })}\n        </Row>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default UpdateProfilePicModal;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Row,\n  Col,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Nav,\n  Navbar,\n} from \"react-bootstrap\";\nimport {\n  Link,\n  Switch,\n  Route,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { IoTrashOutline } from \"react-icons/io5\";\nimport { ImUpload2 } from \"react-icons/im\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport CircularImage from \"./CircularImage\";\nimport NestedRoute from \"./NestedRoute\";\nimport RemoveCoverPhotoDlg from \"./RemoveCoverPhotoDlg\";\nimport SelectBgPhotoModal from \"./SelectBgPhotoModal\";\nimport UpdateProfilePicModal from \"./UpdateProfilePicModal\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport Posts from \"./Posts\";\nimport StorageImage from \"./StorageImage\";\nimport \"./Profile.css\";\nimport { handleClickLink } from \"./helper\";\nimport { useSelector } from \"react-redux\";\nimport { updateProfile } from \"../backend/backend\";\n\nconst Profile = (props) => {\n  const { userName } = useParams();\n\n  const { linkRef, activeMainLink, setActiveMainLink } = props;\n\n  const userID = useSelector((state) => state.user.id);\n  const users = useSelector((state) => state.users);\n\n  const user = () => {\n    const userNames = users.map((user) => {\n      if (!user.index || user.index === 0)\n        return `${user.lastname}.${user.firstname}`;\n      else return `${user.lastname}.${user.firstname}.${user.index}`;\n    });\n    const index = userNames.indexOf(userName);\n    const user = users[index];\n    return user;\n  };\n\n  const userId = () => user().userID;\n\n  const isCurrentUser = userID === userId();\n\n  let { firstname, lastname, profilePictureURL, backgroundPictureURL, photos } =\n    user();\n\n  const [showRemoveCoverPhotoDlg, setShowRemoveCoverPhotoDlg] = useState(false);\n\n  const [showSelectPhoto, setShowSelectPhoto] = useState(false);\n\n  const [showUpdateProfilePic, setShowUpdateProfilePic] = useState(false);\n\n  const [showUploadPhotoDlg, setShowUploadPhotoDlg] = useState(false);\n\n  const [nameOfURL, setNameOfURL] = useState(\"backgroundPictureURL\");\n\n  const [activeLink, setActiveLink] = useState(null);\n\n  //we need the refs to handle the activeLink changes\n  const photosLinkRef = useRef(null);\n  const friendsLinkRef = useRef(null);\n  const postsLinkRef = useRef(null);\n\n  const { url, path } = useRouteMatch();\n\n  function openFileInput(nameOfURL) {\n    setNameOfURL(nameOfURL);\n    setShowUploadPhotoDlg(true);\n  }\n\n  function handleSelect(key) {\n    switch (key) {\n      case \"3\":\n        setShowRemoveCoverPhotoDlg(true);\n        break;\n      case \"2\":\n        openFileInput(\"backgroundPictureURL\");\n        break;\n      case \"1\":\n        setShowSelectPhoto(true);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function closeDlg() {\n    setShowRemoveCoverPhotoDlg(false);\n  }\n\n  function removeCoverPhoto() {\n    closeDlg();\n    return updateProfile({ backgroundPictureURL: \"background-server.jpg\" });\n  }\n\n  function hideBgPhotoModal() {\n    setShowSelectPhoto(false);\n  }\n\n  function handleBgPhotoClick(event) {\n    hideBgPhotoModal();\n    handlePhotoClick(event, \"backgroundPictureURL\");\n  }\n\n  function hideProfilePicModal() {\n    setShowUpdateProfilePic(false);\n  }\n\n  function handleUploadProfilePicClick() {\n    hideProfilePicModal();\n    openFileInput(\"profilePictureURL\");\n  }\n\n  function handleProfilePicClick(event) {\n    hideProfilePicModal();\n    handlePhotoClick(event, \"profilePictureURL\");\n  }\n\n  function updatePhotos(file) {\n    const newPhoto = { fileName: file.name };\n    const filenames = photos.map((photo) => photo.fileName);\n    const newPhotos = [...photos];\n    if (filenames.indexOf(file.name) === -1) {\n      newPhotos.push(newPhoto);\n    }\n    const newProfile = { photos: newPhotos };\n    if (nameOfURL !== \"\") newProfile[nameOfURL] = `${userID}/${file.name}`;\n    return updateProfile(newProfile);\n  }\n\n  function handlePhotoClick(e, name) {\n    const index = Number(e.target.id);\n    const photo = photos[index];\n    const storagePath = `${userID}/${photo.fileName}`;\n    return updateProfile({ [name]: storagePath });\n  }\n\n  useEffect(() => {\n    //we set the active link to the profile link when it renders\n    handleClickLink(\n      { currentTarget: linkRef.current },\n      activeMainLink,\n      setActiveMainLink\n    );\n  }, [linkRef, activeMainLink, setActiveMainLink]);\n\n  return (\n    <>\n      <Row className=\"justify-content-center grad\">\n        <Col className=\"m-0 p-0 profile-col\">\n          <div className=\"background-pic-container\">\n            <StorageImage\n              className=\"background-pic\"\n              storagePath={backgroundPictureURL}\n              alt=\"\"\n            />\n            {isCurrentUser && (\n              <DropdownButton\n                variant=\"light\"\n                className=\"background-pic-button\"\n                title={\n                  <b>\n                    <MdPhotoCamera className=\"mr-1\" size=\"20px\" />\n                    <span>Edit Cover Photo</span>\n                  </b>\n                }\n                size=\"sm\">\n                <Dropdown.Item eventKey=\"1\" onSelect={handleSelect}>\n                  <HiOutlinePhotograph size=\"20px\" className=\"mr-2\" />\n                  Select Photo\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\" onSelect={handleSelect}>\n                  <ImUpload2 size=\"20px\" className=\"mr-2\" />\n                  Upload Photo\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"3\" onSelect={handleSelect}>\n                  <IoTrashOutline size=\"20px\" className=\"mr-2\" /> Remove\n                </Dropdown.Item>\n              </DropdownButton>\n            )}\n            <div className=\"profile-pic-container\">\n              <CircularImage size=\"180\" url={profilePictureURL} />\n              {isCurrentUser && (\n                <Button\n                  variant=\"light\"\n                  className=\"profile-pic-button\"\n                  onClick={() => setShowUpdateProfilePic(true)}>\n                  <MdPhotoCamera size=\"19px\" aria-label=\"photo\" />\n                </Button>\n              )}\n            </div>\n          </div>\n          <h2 className=\"text-center mt-5\">\n            <b>\n              {firstname} {lastname}\n            </b>\n          </h2>\n          <hr></hr>\n          <Navbar bg=\"light\">\n            <Nav>\n              <Nav.Item>\n                <Link\n                  key=\"1\"\n                  to={`${url}/Posts`}\n                  className=\"nav-link mx-2\"\n                  ref={postsLinkRef}>\n                  <b>Posts</b>\n                </Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Link\n                  key=\"2\"\n                  to={`${url}/Friends`}\n                  className=\"nav-link mx-2\"\n                  ref={friendsLinkRef}>\n                  <b>Friends</b> {users.length}\n                </Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Link\n                  key=\"3\"\n                  to={`${url}/Photos`}\n                  className=\"nav-link mx-2\"\n                  ref={photosLinkRef}>\n                  <b>Photos</b>\n                </Link>\n              </Nav.Item>\n            </Nav>\n          </Navbar>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col className=\"profile-col\">\n          <Switch>\n            <Route path={`${path}/:itemId`}>\n              <NestedRoute\n                userID={userId()}\n                openFileInput={() => openFileInput(\"\")}\n                //we only need the rest to handle the changes of the activeLink\n                photosLinkRef={photosLinkRef}\n                friendsLinkRef={friendsLinkRef}\n                postsLinkRef={postsLinkRef}\n                activeLink={activeLink}\n                setActiveLink={setActiveLink}\n              />\n            </Route>\n            <Route path={path}>\n              <Posts\n                userID={userId()}\n                //we only need the rest to handle the changes of the activeLink\n                photosLinkRef={photosLinkRef}\n                friendsLinkRef={friendsLinkRef}\n                postsLinkRef={postsLinkRef}\n                activeLink={activeLink}\n                setActiveLink={setActiveLink}\n              />\n            </Route>\n          </Switch>\n        </Col>\n      </Row>\n\n      <RemoveCoverPhotoDlg\n        show={showRemoveCoverPhotoDlg}\n        removeCoverPhoto={removeCoverPhoto}\n        closeDlg={closeDlg}\n      />\n\n      <SelectBgPhotoModal\n        show={showSelectPhoto}\n        onHide={hideBgPhotoModal}\n        onPhotoClick={handleBgPhotoClick}\n        userID={userID}\n        photos={photos}\n      />\n\n      <UpdateProfilePicModal\n        show={showUpdateProfilePic}\n        onHide={hideProfilePicModal}\n        onBtnClick={handleUploadProfilePicClick}\n        onPhotoClick={handleProfilePicClick}\n        userID={userID}\n        photos={photos}\n      />\n\n      <UploadPhoto\n        show={showUploadPhotoDlg}\n        setShow={setShowUploadPhotoDlg}\n        updateDatabase={updatePhotos}\n        userID={userID}\n      />\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport StorageImage from \"./StorageImage\";\nimport { Row, Col, Carousel } from \"react-bootstrap\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PhotoViewer = () => {\n  const { userID, n } = useParams();\n\n  const users = useSelector((state) => state.users);\n  const photos = users.find((user) => user.userID === userID).photos;\n\n  const [activeIndex, setActiveIndex] = useState(Number(n));\n\n  const history = useHistory();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const locArr = location.pathname.split(\"/\");\n    const index = Number(locArr.pop());\n    setActiveIndex(index);\n  }, [location]);\n\n  const handleSelect = (selectedIndex, e) => {\n    history.push(`/fakebook/photo/${userID}/${selectedIndex}`);\n  };\n\n  return (\n    <Row\n      className=\"bg-200\"\n      style={{\n        position: \"relative\",\n        top: \"50px\",\n        height: \"89vh\",\n      }}\n    >\n      <Col md={9} className=\"h-100\" style={{ backgroundColor: \"black\" }}>\n        <Carousel\n          className=\"w-100 h-100\"\n          interval={null}\n          indicators={false}\n          activeIndex={activeIndex}\n          onSelect={handleSelect}\n        >\n          {photos.map((photo, index) => {\n            return (\n              <Carousel.Item\n                key={index}\n                style={{\n                  width: \"100%\",\n                  height: \"89vh\",\n                }}\n              >\n                <StorageImage\n                  storagePath={`/${userID}/${photo.fileName}`}\n                  alt=\"\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: \"100%\",\n                    maxWidth: \"600px\",\n                    height: \"100%\",\n                    objectFit: \"contain\",\n                  }}\n                ></StorageImage>\n              </Carousel.Item>\n            );\n          })}\n        </Carousel>\n      </Col>\n      <Col></Col>\n    </Row>\n  );\n};\n\nexport default PhotoViewer;\n","import React from \"react\";\nimport CreatePost from \"./CreatePost\";\nimport DisplayPost from \"./DisplayPost\";\nimport { useSelector } from \"react-redux\";\n\nconst PostView = () => {\n  const posts = useSelector((state) => state.posts);\n\n  return (\n    <>\n      <CreatePost\n        isCurrentUser={true}\n        className=\"mw-100 m-auto p-0\"\n        style={{ width: \"450px\" }}\n      />\n      {posts.map((post, index) => {\n        return (\n          <DisplayPost\n            key={index}\n            post={post}\n            className=\"mw-100 mx-auto my-2\"\n            style={{ width: \"450px\" }}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default PostView;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ProfileLink from \"./ProfileLink\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport { MdOndemandVideo } from \"react-icons/md\";\nimport \"./LeftNavbar.css\";\nimport { useSelector } from \"react-redux\";\n\nconst LeftNavbar = (props) => {\n  const user = useSelector((state) => state.currentUser);\n\n  return (\n    <Nav className=\"flex-column mt-3\" id=\"left-navbar\">\n      <div className=\"navitem\">\n        <Nav.Link\n          as={Link}\n          to={props.profileLink}\n          className=\"text-dark flex-column justify-content-center\"\n        >\n          <ProfileLink user={user} size=\"26\" fullname=\"true\" />\n        </Nav.Link>\n      </div>\n      <div className=\"navitem\">\n        <Nav.Link as={Link} to=\"/fakebook/friends/list\" className=\"text-dark\">\n          <FaUserFriends size=\"26px\" className=\"text-info mr-2\" />\n          <div className=\"d-inline\">Friends</div>\n        </Nav.Link>\n      </div>\n      <div className=\"navitem\">\n        <Nav.Link as={Link} to=\"/fakebook/watch\" className=\"text-dark\">\n          <MdOndemandVideo size=\"26px\" className=\"text-info mr-2\" />\n          <div className=\"d-inline\">Watch</div>\n        </Nav.Link>\n      </div>\n    </Nav>\n  );\n};\n\nexport default LeftNavbar;\n","import React from \"react\";\nimport DisplayPost from \"./DisplayPost\";\nimport { useSelector } from \"react-redux\";\n\nconst VideoView = () => {\n  const posts = useSelector((state) => state.posts);\n\n  const videos = posts.filter((post) => post.isYoutube);\n\n  return (\n    <>\n      {videos.map((video, index) => (\n        <DisplayPost\n          key={index}\n          post={video}\n          className=\"mw-100 mx-auto my-2\"\n          style={{ width: \"550px\" }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default VideoView;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport { useSelector } from \"react-redux\";\n\nconst Message = (props) => {\n  const { message, ...rest } = props;\n\n  const userID = useSelector((state) => state.user.id);\n\n  const senderStyle = {\n    width: \"75%\",\n    backgroundColor: \"dodgerblue\",\n    color: \"white\",\n    padding: \"16px\",\n    borderRadius: \"16px\",\n  };\n\n  const receiverStyle = {\n    width: \"75%\",\n    backgroundColor: \"lightgray\",\n    color: \"black\",\n    padding: \"16px\",\n    borderRadius: \"16px\",\n  };\n\n  return (\n    <Row\n      {...rest}\n      className={\n        message.sender === userID\n          ? \"justify-content-end\"\n          : \"justify-content-start\"\n      }\n    >\n      <div\n        style={{\n          fontSize: \"12px\",\n          margin: \"auto\",\n        }}\n      >\n        {new Date(message.timestamp).toLocaleString()}\n      </div>\n      {message.isPhoto && (\n        <div className=\"w-100 p-3\">\n          <StorageImage\n            alt=\"\"\n            storagePath={message.photoURL}\n            style={{\n              display: \"block\",\n              width: \"50%\",\n              margin: \"auto\",\n            }}\n          />\n        </div>\n      )}\n      <p style={message.sender === userID ? senderStyle : receiverStyle}>\n        {message.text}\n      </p>\n    </Row>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport Message from \"./Message\";\n\nconst DisplayConversation = (props) => {\n  const { conversation } = props;\n\n  return (\n    <Col>\n      {conversation.map((msg, index) => (\n        <Message key={index} message={msg} />\n      ))}\n    </Col>\n  );\n};\n\nexport default DisplayConversation;\n","import React, { useEffect, useState } from \"react\";\nimport DisplayConversation from \"./DisplayConversation\";\nimport { useSelector } from \"react-redux\";\n\nconst Conversation = (props) => {\n  const { recipient } = props;\n\n  const [conversation, setConversation] = useState([]);\n\n  const incomingMessages = useSelector((state) => state.incomingMessages);\n  const outgoingMessages = useSelector((state) => state.outgoingMessages);\n\n  const incoming = incomingMessages.filter(\n    (message) => message.sender === recipient\n  );\n  const outgoing = outgoingMessages.filter(\n    (message) => message.recipient === recipient\n  );\n\n  function getConversation(incoming, outgoing) {\n    const conversation = [...incoming, ...outgoing];\n    const sorted = conversation.sort(\n      (msgA, msgB) => new Date(msgA.timestamp) - new Date(msgB.timestamp)\n    );\n    return sorted;\n  }\n\n  useEffect(() => {\n    const newConversation = getConversation(incoming, outgoing);\n    if (newConversation.length !== conversation.length)\n      setConversation(newConversation);\n  }, [incoming, outgoing, conversation]);\n\n  return <DisplayConversation conversation={conversation} />;\n};\n\nexport default Conversation;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Card,\n  CloseButton,\n  Nav,\n  OverlayTrigger,\n  Button,\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport StorageImage from \"./StorageImage\";\nimport ProfileLink from \"./ProfileLink\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { MdSend } from \"react-icons/md\";\nimport StyledTextarea from \"./StyledTextarea\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport Conversation from \"./Conversation\";\nimport {\n  addPhoto,\n  handleTextareaChange,\n  delPhoto,\n  handleKeyPress,\n} from \"./helper\";\nimport \"./Contacts.css\";\nimport { useSelector } from \"react-redux\";\nimport {\n  subscribeMessages,\n  updateToBeRead,\n  uploadMessage,\n} from \"../backend/backend\";\n\nconst Contacts = () => {\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [recipient, setRecipient] = useState(null);\n  const [showPhotoDlg, setShowPhotoDlg] = useState(null);\n\n  const user = useSelector((state) => state.currentUser);\n  const userID = useSelector((state) => state.user.id);\n  const users = useSelector((state) => state.users);\n\n  const WELCOME_TEXT = \"Aa\";\n  const INIT_MESSAGE = {\n    sender: `${userID}`,\n    recipient: \"\",\n    text: \"\",\n    isPhoto: false,\n    photoURL: \"\",\n    isRead: false,\n  };\n  const [message, setMessage] = useState(INIT_MESSAGE);\n\n  function handleClick(user) {\n    if (!user && recipient) return;\n    if (recipient && user.userID !== recipient.userID) return;\n    setShowOverlay(true);\n    let id;\n    if (user) id = user.userID;\n    else id = \"\";\n    const newMessage = { ...message };\n    newMessage.recipient = id;\n    setMessage(newMessage);\n    setRecipient(user);\n  }\n\n  const handleClickCallback = useCallback(handleClick, [user]);\n\n  async function handleClose() {\n    await updateReadStatusOfMessages(recipient);\n    removeSender();\n    setShowOverlay(false);\n    setRecipient(null);\n  }\n\n  function handleChange(e) {\n    handleTextareaChange({\n      e: e,\n      state: message,\n      setState: setMessage,\n    });\n  }\n\n  function addPhotoToMessage(file) {\n    addPhoto({\n      state: message,\n      setState: setMessage,\n      file: file,\n      userID: userID,\n    });\n  }\n\n  function deletePhoto() {\n    delPhoto({\n      state: message,\n      setState: setMessage,\n      user: user,\n      userID: userID,\n    });\n  }\n\n  const convRowRef = useRef(null);\n  const [scrollHeight, setScrollHeight] = useState(\"\");\n\n  function saveMessage() {\n    uploadMessage(message).then(() => {\n      setMessage(INIT_MESSAGE);\n      setScrollHeight(convRowRef.current.scrollHeight);\n    });\n  }\n\n  useEffect(() => {\n    if (convRowRef.current) convRowRef.current.scrollTop = scrollHeight;\n  }, [scrollHeight]);\n\n  useEffect(() => {\n    const unsubscribeIncomingMsg = subscribeMessages(\"incoming\");\n    const unsubscribeOutgoingMsg = subscribeMessages(\"outgoing\");\n    return () => {\n      unsubscribeIncomingMsg();\n      unsubscribeOutgoingMsg();\n    };\n  }, []);\n\n  const [senders, setSenders] = useState([]);\n\n  const incomingMessages = useSelector((state) => state.incomingMessages);\n  const unread = incomingMessages.filter((message) => !message.isRead);\n\n  useEffect(() => {\n    const sendersWithUnreadMsg = [];\n    unread.forEach((msg) => {\n      const sender = msg.sender;\n      if (sendersWithUnreadMsg.indexOf(sender) === -1)\n        sendersWithUnreadMsg.push(sender);\n    });\n    if (senders.length !== sendersWithUnreadMsg.length)\n      setSenders(sendersWithUnreadMsg);\n  }, [senders, unread]);\n\n  useEffect(() => {\n    if (senders.length === 0) return;\n    const last = senders.length - 1;\n    const sender = senders[last];\n    handleClickCallback(users.find((usr) => usr.userID === sender));\n  }, [senders, users, handleClickCallback]);\n\n  function updateReadStatusOfMessages(sender) {\n    const messagesToUpdate = unread.filter(\n      (msg) => msg.sender === sender.userID\n    );\n    const updates = [];\n    messagesToUpdate.forEach((msg) => {\n      const messageID = msg.id;\n      updates.push(updateToBeRead(messageID));\n    });\n    return Promise.all(updates);\n  }\n\n  function removeSender() {\n    const newSenders = [...senders];\n    newSenders.pop();\n    setSenders(newSenders);\n  }\n\n  //We open the overlay card programmatically again, otherwise the user is unable to send\n  //more than one message.\n  if (recipient)\n    if (showOverlay && message.recipient === \"\")\n      //We only do this if we set back the INIT_MESSAGE after previous message had sent.\n      handleClick(recipient);\n  return (\n    <>\n      <Nav className=\"flex-column\">\n        <h5 className=\"text-muted ml-3\">\n          <b>Contacts</b>\n        </h5>\n        {users.map((user, index) =>\n          user.userID === userID ? (\n            <div key={index}></div>\n          ) : (\n            <button\n              type=\"button\"\n              key={index}\n              className=\"navitem text-dark flex-row justify-content-center p-2 mb-1 nav-btn bg-200\"\n              onClick={() => handleClick(user)}\n            >\n              <ProfileLink size=\"26\" fullname=\"true\" bold=\"false\" user={user} />\n            </button>\n          )\n        )}\n      </Nav>\n\n      <OverlayTrigger\n        placement=\"left-start\"\n        show={showOverlay}\n        overlay={\n          <Card\n            style={{\n              width: \"350px\",\n              height: \"450px\",\n              background: \"white\",\n              fontSize: \"1.2rem\",\n              maxHeight: `${window.innerHeight - 70}px`,\n            }}\n          >\n            <Card.Body className=\"overflow-none\">\n              <Card.Title>\n                {!recipient && (\n                  <>\n                    <h6>New Message</h6>\n                    <h6>To:</h6>\n                  </>\n                )}\n                {recipient && (\n                  <ProfileLink\n                    size=\"26\"\n                    fullname=\"true\"\n                    bold=\"true\"\n                    user={recipient}\n                  />\n                )}\n                <div className=\"close-btn-container\">\n                  <CloseButton onClick={handleClose} className=\"text-primary\" />\n                </div>\n              </Card.Title>\n              <hr />\n              {recipient && (\n                <Row\n                  className=\"mh-100 overflow-auto flex-column-reverse\"\n                  ref={convRowRef}\n                >\n                  <Conversation sender={userID} recipient={recipient.userID} />\n                </Row>\n              )}\n              {!recipient && (\n                <Col className=\"h-75 overflow-auto\">\n                  {users.map((user, index) =>\n                    user.userID === userID ? (\n                      <div key={index}></div>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        key={index}\n                        className=\"flex-row text-dark justify-content-start p-2 container-choose-to nav-btn w-100 mb-1 white\"\n                        onClick={() => handleClick(user)}\n                      >\n                        <ProfileLink\n                          size=\"36\"\n                          fullname=\"true\"\n                          bold=\"false\"\n                          user={user}\n                        />\n                      </button>\n                    )\n                  )}\n                </Col>\n              )}\n            </Card.Body>\n            {recipient && (\n              <Card.Footer className=\"mt-5\">\n                <Row>\n                  {message.text === \"\" && (\n                    <Col xs={2}>\n                      <Button\n                        variant=\"light\"\n                        size=\"sm\"\n                        className=\"add-photo-btn\"\n                        onClick={() => setShowPhotoDlg(true)}\n                      >\n                        <HiOutlinePhotograph\n                          size=\"21px\"\n                          className=\"text-primary\"\n                        />\n                      </Button>\n                    </Col>\n                  )}\n                  <Col\n                    xs={message.text === \"\" ? 8 : 10}\n                    className=\"align-self-center\"\n                    style={{\n                      background: \"#e9ecef\",\n                      borderRadius: \"18px\",\n                    }}\n                  >\n                    {message.isPhoto && (\n                      <div className=\"comment-img-container\">\n                        <StorageImage\n                          alt=\"\"\n                          storagePath={`/${message.photoURL}`}\n                          className=\"img-to-comment\"\n                        />\n                        <div className=\"close-btn-container\">\n                          <CloseButton onClick={deletePhoto} />\n                        </div>\n                      </div>\n                    )}\n                    <StyledTextarea\n                      onChange={handleChange}\n                      onKeyPress={(e) => handleKeyPress(e, saveMessage)}\n                      welcomeText={WELCOME_TEXT}\n                      value={message.text}\n                      className=\"w-100 mt-2\"\n                    />\n                  </Col>\n                  <Col xs={2}>\n                    <Button\n                      variant=\"light\"\n                      size=\"sm\"\n                      className=\"add-photo-btn\"\n                      onClick={() => {\n                        if (message.text !== \"\" || message.isPhoto)\n                          saveMessage();\n                      }}\n                    >\n                      <MdSend size=\"23px\" className=\"text-primary\" />\n                    </Button>\n                  </Col>\n                </Row>\n              </Card.Footer>\n            )}\n\n            <UploadPhoto\n              show={showPhotoDlg}\n              setShow={setShowPhotoDlg}\n              updatePost={addPhotoToMessage}\n              userID={userID}\n            />\n          </Card>\n        }\n      >\n        <button\n          type=\"button\"\n          /*style={{\n            position: \"fixed\",\n            background: \"white\",\n            padding: \"12px\",\n            borderRadius: \"50%\",\n            bottom: \"20px\",\n            right: \"calc((100vw - 100em) / 2 + 20px)\",\n            boxShadow: \"0px 5px 5px 0px lightgray\",\n            border: \"none\",\n          }}*/\n          className=\"msg-btn\"\n          onClick={() => handleClick(null)}\n          aria-label=\"Message\"\n        >\n          <FiEdit size=\"22px\" aria-hidden=\"true\" />\n        </button>\n      </OverlayTrigger>\n    </>\n  );\n};\n\nexport default Contacts;\n","import React, { useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport PostView from \"./PostView\";\nimport LeftNavbar from \"./LeftNavbar\";\nimport VideoView from \"./VideoView\";\nimport Contacts from \"./Contacts\";\nimport \"./HomePage.css\";\nimport { handleClickLink } from \"./helper\";\n\nconst HomePage = (props) => {\n  const {\n    profileLink,\n    className,\n    isWatch,\n    linkRef,\n    activeLink,\n    setActiveLink,\n  } = props;\n\n  //we set the active link to the home link when it renders\n  useEffect(() => {\n    handleClickLink(\n      { currentTarget: linkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }, [isWatch, linkRef, activeLink, setActiveLink]);\n\n  return (\n    <Row className={`${className} overflow-hidden vh-100`}>\n      <Col className=\"mh-100 overflow-auto left-navbar-col\">\n        <LeftNavbar profileLink={profileLink} />\n      </Col>\n      <Col\n        sm={9}\n        md={isWatch ? 12 : 9}\n        lg={isWatch ? 9 : 6}\n        className=\"mh-100 overflow-auto hide-scrollbar\"\n      >\n        {!isWatch && <PostView />}\n        {isWatch && <VideoView />}\n      </Col>\n      {!isWatch && (\n        <Col\n          className=\"mh-100 overflow-auto contacts-col\"\n          style={{ position: \"relative\" }}\n        >\n          <Contacts />\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect } from \"react\";\nimport Profile from \"./Profile\";\nimport FriendList from \"./FriendList\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./FriendsListPage.css\";\nimport imgFriends from \"../images/friends.jpg\";\nimport { handleClickLink } from \"./helper\";\n\nconst FriendsListPage = (props) => {\n  const { linkRef, activeLink, setActiveLink } = props;\n\n  const FRIENDS_LIST_PAGE_PATH = \"/fakebook/friends/list\";\n\n  const location = useLocation();\n\n  const isNoUser = FRIENDS_LIST_PAGE_PATH === location.pathname;\n\n  //we set the active link to the friends link when it renders\n  useEffect(() => {\n    handleClickLink(\n      { currentTarget: linkRef.current },\n      activeLink,\n      setActiveLink\n    );\n  }, [activeLink, linkRef, setActiveLink]);\n\n  return (\n    <Row className=\"overflow-hidden friends-list\">\n      <FriendList />\n      <Col className=\"overflow-auto mh-100 hide-scrollbar col-two\">\n        {isNoUser ? (\n          <div className=\"h-100 w-100 d-flex flex-column align-items-center justify-content-center\">\n            <img\n              width=\"200px\"\n              src={imgFriends}\n              alt=\"cartoon of fakebook friends\"\n              className=\"p-4\"\n            />\n            <h5 className=\"text-muted\">\n              <b>Select people's names to preview their profile.</b>\n            </h5>\n          </div>\n        ) : (\n          <div className=\"profile-container\">\n            <Profile\n              linkRef={linkRef}\n              activeMainLink={activeLink}\n              setActiveMainLink={setActiveLink}\n            />\n          </div>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default FriendsListPage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport TitleBar from \"./Titlebar\";\nimport Profile from \"./Profile\";\nimport PhotoViewer from \"./PhotoViewer\";\nimport HomePage from \"./HomePage\";\nimport FriendsListPage from \"./FriendsListPage\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport { useSelector } from \"react-redux\";\nimport {\n  currentUserOffline,\n  currentUserOnline,\n  subscribeCurrentUser,\n  subscribeUsers,\n  subscribePosts,\n} from \"../backend/backend\";\n\nconst UserAccount = (props) => {\n  const { profileLink } = props;\n\n  const currentUser = useSelector((state) => state.currentUser);\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    const unsubscribeCurrentUser = subscribeCurrentUser();\n    const unsubscribeUsers = subscribeUsers();\n    const unsubscribePosts = subscribePosts();\n    //We make currentUser online\n    currentUserOnline();\n    //We add event listener for the event when the user closes the browser window\n    const beforeunloadListener = (e) => {\n      //We put the user offline\n      currentUserOffline();\n    };\n    window.addEventListener(\"beforeunload\", beforeunloadListener);\n    //we add event listener for the event when the browser window change visibility\n    const visibilitychangeListener = (e) => {\n      if (document.visibilityState === \"visible\") currentUserOnline();\n      else currentUserOffline();\n    };\n    document.addEventListener(\"visibilitychange\", visibilitychangeListener);\n    return () => {\n      unsubscribeCurrentUser();\n      unsubscribeUsers();\n      unsubscribePosts();\n    };\n  }, []);\n\n  //We add the index of user to the profileLink if there are more users with the exact same userName\n  function modifyProfileLink() {\n    if (currentUser && currentUser.index && currentUser.index > 0) {\n      return `${profileLink}.${currentUser.index}`;\n    } else return profileLink;\n  }\n\n  const isFriendsListPage = useRef(false);\n\n  function closeFriendsListPage() {\n    isFriendsListPage.current = false;\n  }\n\n  //code responsible for changing activelink with url changes\n\n  const refs = {\n    home: useRef(null),\n    friends: useRef(null),\n    watch: useRef(null),\n    profile: useRef(null),\n  };\n\n  //add the active status of the link DOM elements\n\n  const [activeLink, setActiveLink] = useState(null);\n\n  if (users.length === 0 || !currentUser) {\n    return <div>...Loading</div>;\n  }\n\n  return (\n    <div className=\"bg-200 vw-100 main-container overflow-hidden\">\n      <Container className=\"w-100 p-0\" fluid>\n        <BrowserRouter>\n          <TitleBar\n            profilelink={modifyProfileLink()}\n            closeFriendsListPage={closeFriendsListPage}\n            refs={refs}\n          />\n          <Switch>\n            <Route\n              path=\"/fakebook/friends/list\"\n              render={() => {\n                isFriendsListPage.current = true;\n                return (\n                  <FriendsListPage\n                    // the components need the above props to change the active link\n                    linkRef={refs.friends}\n                    activeLink={activeLink}\n                    setActiveLink={setActiveLink}\n                  />\n                );\n              }}\n            />\n            <Route\n              path={`/fakebook/photo/:userID/:n`}\n              render={() => <PhotoViewer />}\n            />\n            <Route\n              path=\"/fakebook/watch\"\n              render={() => {\n                isFriendsListPage.current = false;\n                return (\n                  <HomePage\n                    className=\"pt-5\"\n                    profileLink={modifyProfileLink()}\n                    isWatch={true}\n                    // the components need the above props to change the active link\n                    linkRef={refs.watch}\n                    activeLink={activeLink}\n                    setActiveLink={setActiveLink}\n                  />\n                );\n              }}\n            />\n            <Route\n              path={`/fakebook/:userName`}\n              render={() => {\n                if (isFriendsListPage.current)\n                  return (\n                    <FriendsListPage\n                      // the components need the above props to change the active link\n                      linkRef={refs.friends}\n                      activeLink={activeLink}\n                      setActiveLink={setActiveLink}\n                    />\n                  );\n                else\n                  return (\n                    <Profile\n                      // the components need the above props to change the active link\n                      linkRef={refs.profile}\n                      activeMainLink={activeLink}\n                      setActiveMainLink={setActiveLink}\n                    />\n                  );\n              }}\n            />\n            <Route\n              path=\"/fakebook\"\n              render={() => {\n                isFriendsListPage.current = false;\n                return (\n                  <HomePage\n                    className=\"pt-5\"\n                    profileLink={modifyProfileLink()}\n                    isWatch={false}\n                    // the components need the above props to change the active link\n                    linkRef={refs.home}\n                    activeLink={activeLink}\n                    setActiveLink={setActiveLink}\n                  />\n                );\n              }}\n            />\n          </Switch>\n        </BrowserRouter>\n      </Container>\n    </div>\n  );\n};\n\nexport default UserAccount;\n","import React, { useState } from \"react\";\nimport { Form, Button, Modal, Alert } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendPasswordReminder } from \"../backend/backend\";\nimport { errorOccured } from \"../features/user/userSlice\";\n\nconst PasswordReminderModal = (props) => {\n  const { show, onHide, onExit } = props;\n\n  const errorMsg = useSelector((state) => state.user.error);\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n\n  function handleChange(e) {\n    e.preventDefault();\n    const input = e.target;\n    setEmail(input.value);\n  }\n\n  function handleClickSend() {\n    sendPasswordReminder(email)\n      .then(() => {\n        onHide();\n      })\n      .catch((error) => dispatch(errorOccured(error.message)));\n  }\n\n  return (\n    <Modal show={show} onHide={onHide} onExited={onExit}>\n      <Modal.Header>\n        <Modal.Title>\n          <strong className=\"fs-2\">Password Reset Email</strong>\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {errorMsg !== \"\" && <Alert variant=\"danger\">{errorMsg}</Alert>}\n        <Form.Group>\n          <Form.Label>\n            Please enter the email address associated to your account to receive\n            a password reset email.\n          </Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            size=\"lg\"\n            onChange={handleChange}\n            value={email}\n          />\n        </Form.Group>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <hr />\n        <Button\n          variant=\"light\"\n          onClick={() => {\n            onHide();\n            dispatch(errorOccured(\"\"));\n          }}\n        >\n          <b>Cancel</b>\n        </Button>\n        <Button variant=\"primary\" onClick={handleClickSend}>\n          <b className=\"px-2\">Send</b>\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PasswordReminderModal;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./App.css\";\nimport SignupModal from \"./components/SignupModal.jsx\";\nimport Login from \"./components/Login.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport RecentLogins from \"./components/RecentLogins.jsx\";\nimport Button from \"react-bootstrap/Button\";\nimport UserAccount from \"./components/UserAccount\";\nimport PasswordReminderModal from \"./components/PasswordReminderModal\";\nimport { useSelector } from \"react-redux\";\nimport { subscribeAuth } from \"./backend/backend\";\n\nfunction App() {\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const unsubscribe = subscribeAuth();\n    return unsubscribe;\n  }, []);\n\n  //Handle the modal\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow() {\n    setShow(true);\n  }\n\n  const handleCloseCallback = useCallback(handleClose, []);\n\n  //get the first and lastName for the route of the profile\n  const name =\n    (user && user.displayName && user.displayName.trim().split(\" \")) || [];\n\n  const lastName = name.pop();\n\n  const firstName = name.join(\" \");\n\n  const profileLink = `/fakebook/${lastName}.${firstName}`;\n\n  //handling the password reminder button\n  const [isModalSignup, setModalSignup] = useState(true);\n\n  function handleClickPasswordReminderBtn() {\n    setModalSignup(false);\n    handleShow();\n  }\n\n  if (user.isLoading) {\n    return <div>...Loading</div>;\n  }\n\n  if (user.isSignedIn && !user.error) {\n    if (user.isEmailVerified) return <UserAccount profileLink={profileLink} />;\n    else return <></>;\n  } else {\n    return (\n      <Col className=\"bg-200 vh-100\">\n        <Row className=\"h-100 align-items-center\">\n          <Col\n            lg={{ span: 5, offset: 1 }}\n            className=\"d-flex justify-content-center\"\n          >\n            <RecentLogins />\n          </Col>\n          <Col lg={5} className=\"bg-200 d-flex justify-content-center\">\n            <div className=\"login p-3 bg-light\">\n              <Login\n                onClickForgottenPswd={handleClickPasswordReminderBtn}\n                disabled\n              ></Login>\n\n              <hr />\n\n              <Button\n                variant=\"success\"\n                size=\"lg\"\n                className=\"d-block w-60 mx-auto mt-4\"\n                onClick={handleShow}\n              >\n                <b>Create New Account</b>\n              </Button>\n            </div>\n          </Col>\n\n          <SignupModal\n            show={show && isModalSignup}\n            onHide={handleCloseCallback}\n            onExit={() => setModalSignup(true)}\n          ></SignupModal>\n\n          <PasswordReminderModal\n            show={show && !isModalSignup}\n            onHide={handleClose}\n            onExit={() => setModalSignup(true)}\n          />\n        </Row>\n      </Col>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}